<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
@<COPYRIGHT>@
==================================================
Copyright 2016.
Siemens Product Lifecycle Management Software Inc.
All Rights Reserved.
==================================================
@<COPYRIGHT>@
--><TcBusinessData xmlns="http://teamcenter.com/BusinessModel/TcBusinessData" Date="Thu Jun 03 01:56:21 AM 2021" TcVersion="tc12000.0.0">
    <Add>
   <Library createRelease="tc9000.1.3" description="Library to support visualization in Active Workspace." isThirdParty="false" name="Awv0activeworkspacevis" namespace="" serviceLibrary="false">
     <DependentOn name="metaframework"/>
     <DependentOn name="tccore"/>
     <DependentOn name="tc"/>
     <DependentOn name="cxpom"/>
   </Library>
   <TcClass className="Awv0BookmarkVisData" description="" isExportable="false" isUninheritable="false" isUninstantiable="false" parentClassName="Awb0BookmarkData">
     <TcAttribute attributeName="awv0VisBookmarkFile" attributeType="POM_typed_reference" description="Reference to ImanFile that stores the Visualization state information.  It may be NULL." exportAsString="false" followOnExport="false" isArray="false" isCandidateKey="false" isNullsAllowed="true" isPublicRead="false" isPublicWrite="true" isTransient="false" isUnique="false" maxStringLength="0" noBackpointer="false" typedRefClassName="ImanFile"/>
   </TcClass>
   <OperationInputType artifactName="Awv0BookmarkVisDataCreI" description="CreateInput object for &quot;Awv0BookmarkVisData&quot; business object" isAbstract="false" parentTypeName="Awb0BookmarkDataCreI" typeClassName="Awv0BookmarkVisDataCreI" typeName="Awv0BookmarkVisDataCreI">
     <OperationInputProperty compoundObjectConstant="" compoundObjectType="" description="" fieldType="SimpleProperty" propName="awv0VisBookmarkFile" srcPropName=""/>
   </OperationInputType>
   <OperationInputType artifactName="Awv0BookmarkVisDataSvAI" description="SaveAsInput object for &quot;Awv0BookmarkVisData&quot; business object" isAbstract="false" parentTypeName="Awb0BookmarkDataSvAI" typeClassName="Awv0BookmarkVisDataSvAI" typeName="Awv0BookmarkVisDataSvAI"/>
   <TcStandardType artifactName="Awv0BookmarkVisData" description="Awv0BookmarkVisData is the business object which captures the Visualization application related information in order for the application to restore a Bookmark state.&#10;Active Workspace provides a user experience via AutoBookmark and SavedBookmark  where the user can pick up from where he has left off, or get back to the previous state in case of switching devices or due to network drops etc.. &#10;This business object stores the Visualization application state information like Camera angle, PMI etc. which are later retrieved to restore the bookmark in the Active Workspace Viewer  application." isAbstract="false" parentTypeName="Awb0BookmarkData" typeClassName="Awv0BookmarkVisData" typeName="Awv0BookmarkVisData"/>
   <BusinessObjectInterface createRelease="tc9000.1.3" description="Interface Name for Business Object Awv0BookmarkVisData" libraryName="Awv0activeworkspacevis" name="Awv0BookmarkVisData" namespace="awv0activeworkspacevis" primaryInterface="true" typeName="Awv0BookmarkVisData"/>
   <OperationAttach id="awb0Clone#tag_t,*" typeName="Awv0BookmarkVisData"/>
   <OperationAttach id="fnd0Delete#" typeName="Awv0BookmarkVisData"/>
   <OperationAttach id="validateCreateInput#Teamcenter::CreateInput,*" typeName="Awv0BookmarkVisData"/>
   <TcPropertyAttach typeName="Awb0PositionedElement">
     <TcProperty arrayLength="0" description="Indicates whether monolithic jt file is present related to the element." isArray="false" propMaxStringLength="0" propName="awv0JtOverrideChildren" propTypeName="Runtime" propValueType="PROP_logical" referencedType="" referencedTypeConstant=""/>
   </TcPropertyAttach>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Awv0BookmarkVisData" value="Awv0BookmarkVisDataCreI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Awv0BookmarkVisData" value="Awv0BookmarkVisDataSvAI"/>
   <TcPropertyConstantAttach constantName="Awb0BOMToOccurrence" propertyName="awv0JtOverrideChildren" typeName="Awb0PositionedElement" value="bl_jt_override_children"/>
   <TcPropertyConstantAttach constantName="Enabled" propertyName="awv0JtOverrideChildren" typeName="Awb0PositionedElement" value="true"/>
   <TcPropertyConstantAttach constantName="Modifiable" propertyName="awv0JtOverrideChildren" typeName="Awb0PositionedElement" value="Write"/>
   <TcExtension cannedExtension="true" description="The extension is responsible to modify existing entries and create additional entries in the vvi file so that visualization is launched in the correct context. If a Awb0ProductContextInfo is launched from a Saved Working Context(SWC) and if the SWC has a Vis_Session attached to it then the launched object in the vvi file will be made as Vis_Session dataset by this extension." functionality="Fnd0Visualization" internal="false" languageType="CPlusPlus" libraryName="libAwv0activeworkspacevis" name="Awv0ProductContextInfoGetBaseDocumentUserExit">
     <TcExtensionValidity parameter="TYPE:Awb0ProductContextInfo:BMF_USER_VIS_get_basedocument:4"/>
   </TcExtension>
   <TcExtension cannedExtension="true" description="The extension is responsible to modify existing entries and create additional entries in the vvi file so that visualization is launched in the correct context. If a Awb0SavedBookmark is launched and if the SWC has a Vis_Session attached to it then the launched object in the vvi file will be made as Vis_Session dataset by this extension." functionality="Fnd0Visualization" internal="false" languageType="CPlusPlus" libraryName="libAwv0activeworkspacevis" name="Awv0SavedBookMarkInfoGetBaseDocumentUserExit">
     <TcExtensionValidity parameter="TYPE:Awb0SavedBookmark:BMF_USER_VIS_get_basedocument:4"/>
   </TcExtension>
   <TcExtensionAttach conditionName="isTrue" description="" extendableElementName="Awb0ProductContextInfo" extendableElementType="Type" extensionName="Awv0ProductContextInfoGetBaseDocumentUserExit" extensionPointType="BaseAction" isActive="true" operationName="BMF_USER_VIS_get_basedocument"/>
   <TcExtensionAttach conditionName="isTrue" description="" extendableElementName="Awb0SavedBookmark" extendableElementType="Type" extensionName="Awv0SavedBookMarkInfoGetBaseDocumentUserExit" extensionPointType="BaseAction" isActive="true" operationName="BMF_USER_VIS_get_basedocument"/>
   <Functionality description="Capability to support visualization features." displayName="Active Workspace Visualization" enabledForVerificationRules="false" name="Awv0ActiveWorkspaceVis"/>

   <Library createRelease="tc9000.1.3" description="This service library provides the services that are visualization specific in Active Workspace." isThirdParty="false" name="Awv0SoaActiveWorkspaceVis" namespace="Awv0::Soa::ActiveWorkspaceVis" serviceLibrary="true">
     <DependentOn name="Awv0activeworkspacevis"/>
   </Library>
   <ServiceInterface createRelease="tc10000.1.4" dependencies="" description="This service interface provides operations that perform server side business logic for the visualization integrations in Active Workspace. These operations help interrogate and manipulate the Teamcenter data model for visualization data and aid with integrating visualization enabled client applications with Teamcenter in a consistent way." libraryName="Awv0SoaActiveWorkspaceVis" name="DataManagement" namespace="Awv0::Soa::ActiveWorkspaceVis" serviceLibraryRef=""/>
   <ServiceInterface createRelease="tc10000.1.4" dependencies="" description="Provides interface to retrieve product structure information that is specific to visualization client." libraryName="Awv0SoaActiveWorkspaceVis" name="MassiveModelVisualization" namespace="Awv0::Soa::ActiveWorkspaceVis" serviceLibraryRef=""/>
   <ServiceInterface createRelease="tc9000.1.3" dependencies="" description="Provides interface to occurrence management that are specific to visualization in Active Workspace." libraryName="Awv0SoaActiveWorkspaceVis" name="OccurrenceManagement" namespace="Awv0::Soa::ActiveWorkspaceVis" serviceLibraryRef=""/>
   <Struct createRelease="tc10000.1.4" description="This structure holds information about the object(s) that will be launched to the viewer. It may contain addtional option information that can affect how the VVI is to be generated." isPublished="true" name="IdInfo" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <StructElement description="The business object to be laucnhed. Launched object could be of type Item, ItemRevision, Dataset, BOMView, BOMViewRevision or Awb0ProductContextInfo. The business object will be resolved by the server in some cases (e.g. Item or ItemRevision launch) to a directly launchable visualization object (such as a DirectModel Dataset or BOMViewRevision)." name="launchedObject">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
     <StructElement description="The parent or containing Item of the launched object.  If this is not provided, the server will attempt to identify the parent if it can. If the parent information cannot be identified, this will not result in an error condition. The parent Item information will simply not be passed to the visualization client, which could affect what features are available in the client." name="item">
       <DataTypeRefParam dataType="Teamcenter::Item"/>
     </StructElement>
     <StructElement description="The parent or containing ItemRevision of the launched object. If this is not known, the server will attempt to identify the parent if it can. If the parent information cannot be identified, this will not result in an error condition. The parent ItemRevision information will simply not be passed to the visualization client, which could affect what features are available in the client." name="itemRev">
       <DataTypeRefParam dataType="Teamcenter::ItemRevision"/>
     </StructElement>
     <StructElement description="The list of selected occurrences being launched. These occurrences may be of type BOMLine or Awb0Element. When this vector is non-empty then the launchedObject field of the IdInfo structure must contain an object that defines the configuration state for the occurrences. For example, the configuration object is of type Awb0ProductContextInfo when the occurrences are of type Awb0Element. The configuration object is of type BOMWindow when the occurrences are of type BOMLine." name="occurrencesList">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="Map of option names to OptionInfo structures. These options are used to control the creation of the launch information in some way.&lt;br /&gt;&lt;br /&gt;Current options include:&lt;br /&gt;&lt;br /&gt;&quot;CreateVisSC&quot; - &quot;True&quot; or &quot;False&quot;&lt;br /&gt;   Informs the service to create a VisStructureContext object based on the laucnhedObject and occurrenceList field of the IdInfo structure.&lt;br /&gt;&lt;br /&gt;&quot;OVERRIDE_VisDoc_Type&quot; - some replacement string&lt;br /&gt;   Directs the service to replace the value of the VisDoc_Type key in the launch file with the specified string.&lt;br /&gt;&lt;br /&gt;&quot;TransientDoc&quot; - &quot;True&quot; or &quot;False&quot;&lt;br /&gt;   Indicates whether the launched object is to be considered transient by the viewer. Transient objects are normally deleted when the viewer is finished with the document used to open the launched object.&lt;br /&gt;&lt;br /&gt;&quot;Operation&quot; - &quot;open&quot;, &quot;insert&quot;, &quot;merge&quot;, &quot;interop&quot;&lt;br /&gt;   Informs the viewer on what type of launch operation is being requested.&lt;br /&gt;&lt;br /&gt;&quot;OperationStructure&quot; - &quot;Dynamic&quot;, &quot;Static&quot;, &quot;Preference&quot;, &quot;Ask&quot;&lt;br /&gt;   Informs the viewer on what type of structure launch is being requested.&lt;br /&gt;&lt;br /&gt;&quot;UseTransientVolume&quot; - &quot;True&quot; or &quot;False&quot;&lt;br /&gt;   Determines how the service is to return the launch information. If &quot;True&quot; then the launch information is written to a file in the transient volume and a FMS ticket is returned in the ticket field of the LaunchInfoResponce structure. If &quot;False&quot; then the launch information is written to a string and that string is placed into the vviStrBufferOutputMap field of the LaunchInfoResponce structure. In the later case, the key name to be used is found in the &quot;ClientId&quot; option that is now required.&lt;br /&gt;&lt;br /&gt;&quot;ClientId&quot; - a unique string used to identify this call to the service.&lt;br /&gt;   Is a required option when the &quot;TransientVolume&quot; option is &quot;False&quot;.&lt;br /&gt;&lt;br /&gt;&quot;Client&quot; - string used to identify the client calling this service&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Currently the only value being recognized is &quot;AW&quot;, which indicates that ActiveWorkspace is the desired client viewer.&lt;br /&gt;&lt;br /&gt;" name="createOptions">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::OptionsMap"/>
     </StructElement>
     <StructElement description="This is a generic mechanism for putting additional key/value pairs into the output launch information. This data is considered opaque to the service and the key/value pairs are simply output into the VVI launch information." name="idAdditionalInfo">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::KeyValueMap"/>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc10000.1.4" description="Map of key-value name pairs, each of type std::string." isPublished="true" name="KeyValueMap" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="std::string"/>
     </DataTypeRefParam>
   </Typedef>
   <Struct createRelease="tc10000.1.4" description="The output response structure for the createLaunchInfo () operation." isPublished="true" name="LaunchInfoResponse" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <StructElement description="Holds a FMS transient file ticket for the launch information written to the VVI file.&lt;br /&gt;This member is valid only when the &quot;UseTransientVolume&quot; option from the IdInfo input structure was set to &quot;True&quot;." name="ticket">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The map of clientId string to the VVI launch information string buffer(string/string). This member is valid only when the &quot;UseTransientVolume&quot; option from the IdInfo input structure was set to &quot;False&quot;. Also requires the &quot;ClientId&quot; option from the IdInfo input structure to be present and set to non-zero length string. The value of the &quot;ClientId&quot; option is used as the key to this map." name="vviStrBuffersOutputMap">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::VVIStringBufferOutputMap"/>
     </StructElement>
     <StructElement description="SOA Framework object containing error information. In cases where objects cannot be launched, error message, codes will be mapped to respective object id in the list of partial errors." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the value of the for a given launch file option and a flag indicating whether the option key name and value should be written to the launch file." isPublished="true" name="OptionInfo" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <StructElement description="The value for the given option." name="optionValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A flag indicating whether the option key/value pair should also be written into the launch file." name="includeInLaunchFile">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc10000.1.4" description="A map of option key names to OptionInfo structures. These options are used to control the creation of the launch file in some way. &lt;br /&gt;" isPublished="true" name="OptionsMap" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::OptionInfo"/>
     </DataTypeRefParam>
   </Typedef>
   <Struct createRelease="tc10000.1.4" description="This structure holds the basic information for Teamcenter Visualization to connect to the server." isPublished="true" name="ServerInfo" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <StructElement description="A required parameter referencing the protocol type for connection to the server. Use http for standard 4 tier connections, and iiop for 2 tier deployments." name="protocol">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A required parameter referencing the URL to connect to the server." name="hostpath">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A required parameter referencing the servermode that controls how the connection to the server is made: 2 for two tier. 4 for four tier." name="servermode">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="An optional parameter referencing the additional information of the server in form of key/value pair (if any)." name="serverAdditionalInfo">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::KeyValueMap"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure holds the information about the session information of the client application from where the launch operation was initiated." isPublished="true" name="SessionInfo" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <StructElement description="Client/Server session discriminator to connect to existing specified session.  This allows the viewer application to share an existing server process session with the client that initiated the launch. If this is not specified, the viewer will present a login prompt." name="sessionDescriminator">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Map of option names to OptionInfo structures. These options are used to control the creation of the launch information in some way.&lt;br /&gt;&lt;br /&gt;Current options include:&lt;br /&gt;&lt;br /&gt;&quot;UseTransientVolume&quot; - &quot;True&quot; or &quot;False&quot;&lt;br /&gt;   Determines how the service is to return the launch information. If &quot;True&quot; then the launch information is written to a file in the transient volume and a FMS ticket is returned in the ticket field of the LaunchInfoResponce structure. If &quot;False&quot; then the launch information is written to a string and that string is placed into the vviStrBufferOutputMap field of the LaunchInfoResponce structure. In the later case, the key name to be used is found in the &quot;ClientId&quot; option that is now required.&lt;br /&gt;" name="sessionOptions">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::OptionsMap"/>
     </StructElement>
     <StructElement description="An optional parameter referencing the additional information of the session in form of key/value pair (if any)." name="sessionAdditionalInfo">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::KeyValueMap"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure holds the information about the client application that initiated the launch." isPublished="true" name="UserAgentDataInfo" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <StructElement description="An optional parameter referencing the client who initiates the launch." name="userApplication">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="An optional parameter referencing the version of the client that initiated launch." name="userAppVersion">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="An optional parameter referencing the additional information of client application in form of key/value pair (if any)." name="userAdditionalInfo">
       <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::KeyValueMap"/>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc10000.1.4" description="A map containing client ids or additional Teamcenter object UID  and vviStringBuffer as key/value pairs." isPublished="true" name="VVIStringBufferOutputMap" namespace="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement" scope="Awv0::Soa::ActiveWorkspaceVis::DataManagement">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="std::string"/>
     </DataTypeRefParam>
   </Typedef>
   <Struct createRelease="tc9000.1.3" description="This structure contains a list of &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; instances,  &lt;b&gt;ImanFile&lt;/b&gt; object and the read file ticket to the &lt;b&gt;ImanFile&lt;/b&gt; object  that contains the visualization bookmark information." isPublished="false" name="GetVisBookmarkInfoResponse" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement" scope="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement">
     <StructElement description="A list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt; structures." name="visBookmarkInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::VisBookmarkInfo"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The Service Data through which the errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc9000.1.3" description="This structure contains a list of &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; instances,  &lt;b&gt;ImanFile&lt;/b&gt; object and the read file ticket to the ImanFile object  that contains the visualization bookmark information that was saved." isPublished="false" name="SaveVisBookmarkInfoResponse" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement" scope="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement">
     <StructElement description="A list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt; structures." name="visBookmarkInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::VisBookmarkInfo"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The Service Data through which the errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc9000.1.3" description="This structure contains  the  &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;, and transient file ticket for the bookmark file that was uploaded to the transient volume." isPublished="false" name="SaveVisBookmarkInput" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement" scope="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement">
     <StructElement description="&lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; for which the visualization bookmark information is updated." name="productContextInfo">
       <DataTypeRefParam dataType="Teamcenter::Awb0ProductContextInfo"/>
     </StructElement>
     <StructElement description="FMS transient file ticket for a file which was uploaded to the transient volume." name="visBookmarkTransientFileTicket">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc9000.1.3" description="This structure contains  the  &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;, and its visualization bookmark information. The visualization bookmark information is contained in the file for which the FMS read ticket is being returned." isPublished="false" name="VisBookmarkInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement" scope="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement">
     <StructElement description="&lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; for which the visualization bookmark information was saved." name="productContextInfo">
       <DataTypeRefParam dataType="Teamcenter::Awb0ProductContextInfo"/>
     </StructElement>
     <StructElement description="&lt;b&gt;ImanFile&lt;/b&gt; object containing the visualization bookmark information that was saved." name="visBookmarkFile">
       <DataTypeRefParam dataType="Teamcenter::ImanFile"/>
     </StructElement>
     <StructElement description="FMS read ticket for the &lt;b&gt;ImanFile&lt;/b&gt; object." name="visBookmarkFileReadTicket">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains  information about the effectivity configuration.&lt;br /&gt;&lt;b&gt;Note&lt;/b&gt;: If effectivityUnitNo is not to be considered then -1 has to be passed as the default value. Value  0 is considered as  a valid effectivity unit number." isPublished="false" name="EffectivityInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="Effective unit number." name="effectivityUnitNo">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Effective date configuration information." name="effectivityDate">
       <DataTypeRefParam dataType="Teamcenter::DateTime"/>
     </StructElement>
     <StructElement description="Effective end item." name="endItem">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the list of product and configuration for which the product structure information is indexed." isPublished="false" name="GetIndexedProductsResponse" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A list of product and configuration for which the product structure information are indexed." name="indexedProductAndConfigInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::IndexedProductOutput"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData in which the partial errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the information about the product structure information identifier which can be used to determine the product structure information from the catalogue of product structure information maintained at the client. The configuration that need to be applied on that product structure information is also returned via this response." isPublished="false" name="GetProductStructureIdResponse" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A list of product and configuration for which the product structure information are indexed. " name="psIdInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInfo"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData by which the partial errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the information about the files containing product structure information that make up a complete product structure." isPublished="false" name="GetStructureFilesResponse" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A list of ProductStructureFileInfo containing the read ticket to the complete and or delta product structure files." name="productStructureFileInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureFileInfo"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData by which the partial errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="A structure containing an internal property name, a list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PFUIDs &lt;/font&gt;that are to be grouped based upon &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PropertyGroupingValue&lt;/font&gt;." isPublished="false" name="GroupOccsByPropertyInput" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="The internal name of the property based on whose values the occurrences are to be grouped." name="internalPropertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="List of pfuid by which the product structure line can be identified in ACE Index Bom." name="pfuidList">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="List of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PropertyGroupingValue&lt;/font&gt; information corresponding to the property." name="propertyValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::PropertyGroupingValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the product, associated configuration information along with an identifier that is used to indentify this product and configuration in a catalogue of structure files." isPublished="false" name="IndexedProductOutput" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="The product and the configuration information." name="productConfigInfo">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfo"/>
     </StructElement>
     <StructElement description="An identifier to identify this product and configuration. The structure files for this product and configuration can be identified by this identifier." name="productStructureIdentifier">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="A structure that contains a list of PFUIDs, grouped by the property names and values." isPublished="false" name="OccsGroupedByProperty" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="The internal name of the property." name="internalPropertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A map (string, list of strings) containing a list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;propertyGroupID&lt;/font&gt; for each PFUID. For multi-valued properties, a single PFUID may be associated with multiple &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;propertyGroupIDs&lt;/font&gt;." name="groupedPfuidsMap">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::PfuidToPropertyGroupIdMap"/>
     </StructElement>
     <StructElement description="List of unmatched pfuids." name="unmatchedPfuidList">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="A structure that contains a list of PFUIDs, grouped by the property names and values." isPublished="false" name="OccsGroupedByPropertyResponse" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="List of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;OccGroupedByProperty&lt;/font&gt; information." name="groupedOccList">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::OccsGroupedByProperty"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The service data through which errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc10000.1.4" description="A map containing a list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;propertyGroupID&lt;/font&gt; for each PFUID. For multi-valued properties, a single PFUID may be associated with multiple &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;propertyGroupIDs&lt;/font&gt;. The id will allow to associate the input to the output. This allows multiple types or ranges share the same color.&lt;br /&gt;" isPublished="false" name="PfuidToPropertyGroupIdMap" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </DataTypeRefParam>
   </Typedef>
   <Struct createRelease="tc10000.1.4" description="This structure contains product and the associated configuration for which the product structure information is indexed." isPublished="false" name="ProductAndConfigInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="The product which is indexed. It could be an &lt;b&gt;ItemRevision&lt;/b&gt;." name="product">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
     <StructElement description="The RevisionRule configuration applied on the product structure." name="revisionRule">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
     <StructElement description="A list of effectivity information for which the product structure was configured." name="effectivityInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::EffectivityInfo"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of &lt;b&gt;VariantRule&lt;/b&gt; applied on the product structure." name="variantRuleInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::VariantRuleInfo"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains product and the associated configuration for which the product structure information file has to be retrieved. In case the client always needs a full structure then the deltaIdentifier can be passed as empty in which case the complete structure file along with any delta product structure files will be returned.&lt;br /&gt;The product information for which the product structure information has to be retrieved can be provided using the recipeObject or the productConfigInfo.recipeObject if provided would take precedence over productConfigInfo.&lt;br /&gt;" isPublished="false" name="ProductAndConfigInfoInput" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A clientId passed by the client in order to map the input to the corresponding output in the response." name="clientId">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Delta identifier to identify mark point from which the next set of delta need to be retrieved." name="deltaIdentifier">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The BusinessObject that contains the information about the product and the configuration. For example it could be &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; or &lt;b&gt;VisStructureContext&lt;/b&gt;." name="recipeObject">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
     <StructElement description="The product and the configuration information for which the product structure is being retrieved." name="productConfigInfo">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfo"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the read ticket to a file containing the complete product structure information at some point in time and a set of read tickets to files containing the delta product structure information. The order of &lt;i&gt;deltaStructureFileReadTickets&lt;/i&gt; is the order in which the delta files has to be merged with the complete file to make the product structure information current." isPublished="false" name="ProductStructureFileInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A clientId passed by the client in order to map the input to the corresponding output in the response." name="clientId">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Read ticket to file that contains the full product structure at some point in time." name="fullStructureFileReadTicket">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Read tickets to file containing delta product structure information since the complete product structure file was generated." name="deltaStructureFileReadTickets">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A delta token that need to be used for identifying  the next set of delta product structure file since this request." name="nextDeltaIdentifierToken">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains the id of the product structure and the configuration information that need to be applied to the product structure." isPublished="false" name="ProductStructureIdInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A clientId passed by the client in order to map the input to the corresponding output in the response." name="clientId">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The identifier to identify the product structure information. This identifier corresponds to the product id in the product structure(mmp file)." name="productStrutureIdentifier">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The configuration that need to be applied on the  product structure." name="productAndConfig">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfo"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains product and the associated configuration for which the product structure information id is to be determined. The configuration information can either be passed in a detailed format or as recipe object." isPublished="false" name="ProductStructureIdInput" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A clientId passed by the client in order to map the input to the corresponding output in the response." name="clientId">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The object that contains the configuration recipe. It could be something like &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; or &lt;b&gt;VisStructureContext&lt;/b&gt;." name="recipeObject">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
     <StructElement description="The product and configuration information for which the structure id has to be determined." name="productAndConfig">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfo"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="A structure containing start and end values for a specific property. The end value is used for range comparisons if populated." isPublished="false" name="PropertyGroupingValue" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="Unique Identifier used by client to identify the group. The id will allow to associate the input to the output. This allows multiple types or ranges share the same color.&lt;br /&gt;" name="propertyGroupID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="String representation of the value for the property. For ranges, this is the start value for the range. If the client code is dealing with specific value types (int, double, etc.) the client code can use the appropriate client APIs to convert values to a string representation e.g Property::toFloatString, Property::toIntString, Property::toDateString, etc. On the server side, they can be converted back to the appropriate value types using the corresponding APIs e.g Property::parseFloat, Property::parseInt, Property::parseDate, etc." name="startValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="String representation of the end value for the property. This is optional and is populated only for ranges. It represents the end value of the range. See the startValue description for how the client  and server code can convert from and to the specific value types.&lt;br /&gt;" name="endValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains  information about the file that need to be associated to the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; identified by the &lt;b&gt;deltaCollectionIdentifier&lt;/b&gt;." isPublished="false" name="UpdateCollectionInput" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="The string used to uniquely identify the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; instance. This is an uid of of &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; instance in cases of Active Content Experience(ACE). In other non ACE usecases this is the string by which the &lt;b&gt;Awb0ProductStructureProvider&lt;/b&gt; identifies the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; instance. " name="deltaCollectionIdentifier">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The file that need to be associated to the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset." name="productStructureFile">
       <DataTypeRefParam dataType="Teamcenter::ImanFile"/>
     </StructElement>
     <StructElement description="If true, the file being supplied represents the complete product structure information. If false the file being supplied represents the delta product structure information." name="isFull">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc10000.1.4" description="This structure contains &lt;b&gt;VariantRule&lt;/b&gt; object that was applied for configuration and the object to which the &lt;b&gt;VariantRule&lt;/b&gt; is associated through GRM relation." isPublished="false" name="VariantRuleInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="The &lt;b&gt;VariantRule&lt;/b&gt;  applied for configuration." name="variantRule">
       <DataTypeRefParam dataType="Teamcenter::VariantRule"/>
     </StructElement>
     <StructElement description="The object to which the &lt;b&gt;VariantRule&lt;/b&gt; is associated via &lt;b&gt;ImanRelation&lt;/b&gt;." name="variantRuleOwningObject">
       <DataTypeRefParam dataType="Teamcenter::BusinessObject"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.0.0" description="This structure contains the information about the product structure information identifier which can be used to determine the product structure information from the catalogue of product structure information maintained at the client. The configuration that need to be applied on that product structure information is also returned via this response." isPublished="false" name="GetProductStructureIdResponse2" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A list of product and configuration for which the product structure information are indexed." name="psIdInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization::ProductStructureIdInfo2"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData by which the partial errors are communicated to the client." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.0.0" description="This structure contains the id of the product structure and the configuration information that need to be applied to the product structure." isPublished="false" name="ProductStructureIdInfo2" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A clientId passed by the client in order to map the input to the corresponding output in the response." name="clientId">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The identifier to identify the product structure information. This identifier corresponds to the product id in the product structure(mmp file)." name="productStrutureIdentifier">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The configuration that need to be applied on the product structure." name="productAndConfig">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfo"/>
     </StructElement>
     <StructElement description="The client revision rule information to be used for solver library inside VDS." name="clientRevRuleInfo">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization::RevRuleInfo"/>
     </StructElement>
     <StructElement description="The Partition revision rule information to be used for solver library inside VDS." name="partitionRevRuleInfo">
       <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization::RevRuleInfo"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.0.0" description="This structure contains names of revision rule entry names, effectivity expression, variant expression and revision rule date." isPublished="false" name="RevRuleInfo" namespace="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization" scope="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization">
     <StructElement description="A list of revision rule entry names." name="revRuleEntryNames">
       <DataTypeRefParam dataType="std::vector&lt;std::string&gt;"/>
     </StructElement>
     <StructElement description="Effectivity expression string." name="effectivityExpr">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Variant expression string." name="variantExpr">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Revision rule Date." name="revRuleDate">
       <DataTypeRefParam dataType="Teamcenter::DateTime"/>
     </StructElement>
   </Struct>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.4" description="This service operation is an extension to the service operation with the same name located in the DataManagement Interface of the Visualization service library. This extension allows the support of launching ActiveWorkspace specific objects such as Awb0Element and Awb0ProductContextInfo.&lt;br /&gt;&lt;br /&gt;This service generates a VVI information which is used to launch Teamcenter Visualization viewers with selected objects from Teamcenter and preserve a two way communication link between the viewer and the server.  This operation can return the VVI information as a string buffer or as a read file ticket to a vvi/vfz file in the FMS transient file volume. The &quot;UseTransientVolume&quot; option passed into the service via the Idinfo structure controls how the VVI launch information is returned.&lt;br /&gt;&lt;br /&gt;Obtaining the launch information as a string might be usefule to avoid setup and use of the FMS system directly by the calling client.  It is the responsibility of the client to determine how to use the returned string buffer.  For example, the vvi string buffer(s) can be written out as a vvi or vfz file on the client and passed to visualization, or the string buffer can be passed directly to embedded visualization if using the PLMVis toolkit.  &lt;br /&gt;&lt;br /&gt;If returning the launch information as a FMS transient file ticket then the operation requires the Teamcenter File Management System (FMS) to be installed (including FCC and transient volumes) in order to retrieve the VVI file from the transient file volume. When operating in this mode, the operation generates the launch file (VFZ or VVI), stores it in the FMS transient volume, and returns the FMS ticket. The client that initiated this operation is responsible for downloading the transient file (VVI or VFZ) from the transient volume to a local file system using the transient ticket. The transient (VVI or VFZ) file is consumed by the Teamcenter Visualization client. The viewer establishs a server connection and loads the object(s) specified in the VVI file.  Launch on multiple objects will generate a VFZ file (zip of all the vvi files) and transient ticket of VFZ file would be sent to client.&lt;br /&gt;&lt;br /&gt;NOTE: VVI and VFZ files are not intended to be persisted and should be generated with each launch to Teamcenter Visualization. For example, the VVI format is not guaranteed to be supported if the server or viewer is updated. VFZ files are used if more than one object is launched at a time, while VVI files are used for single objects.&lt;br /&gt;&lt;br /&gt;As with the previous createLaunchInfo service operation located in the Visualization library, this service supports launch on Teamcenter persistent objects like Dataset, Item, ItemRevision, BOMViewRevision, BOMView. It also supports launch of selected BOMLines of a configured structure from Structure Manager or BOPLines from Manufacturing Process Planner, but in this case the caller must first create a VisStructureContext object and make it the launched object. However with this operation you may also launch objects of type Awb0Element and Awb0ProductContextInfo. See description of IdInfo for details.&lt;br /&gt;&lt;br /&gt;Valid launch object types and behavior such as priority order can be configured with the Teamcenter Preferences VMU_Datasets, VMU_FileSearchOrder and VMU_RelationSearchOrder." id="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::LaunchInfoResponse#Awv0::Soa::ActiveWorkspaceVis::DataManagement::createLaunchInfo#const,std::vector&lt;Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::IdInfo&gt;,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::ServerInfo,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::UserAgentDataInfo,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::SessionInfo,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::DataManagement::createLaunchInfo" returnConst="false" returnDescription="VVI file data as a string buffer or FMS file ticket for the request objects. The following partial errors may be returned:&lt;br /&gt;208031: Launch request is not valid.&lt;br /&gt;208013: The selected object is invalid for the launch operation;&lt;br /&gt;208012: Launch file generation failed." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::LaunchInfoResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of Teamcenter objects and related information that need to be visualized in Teamcenter Visualization. For example, if a Dataset is launched, then information about its Item, ItemRevision and type of operation, including any additional information can be provided." freeOutputMemory="false" inputOutput="Input" name="idInfos">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::IdInfo" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="Server information for the viewer to connect to the server. Contains protocol, server URL, connection mode of the server and any other additional server relevant key value pair." freeOutputMemory="false" inputOutput="Input" name="serverInfo">
       <OperationParameterDataTypeRef dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::ServerInfo" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="The information about the client that initiated the launch (e.g., application name, application version, and any other additional client application relevant key value pair)." freeOutputMemory="false" inputOutput="Input" name="userDataAgentInfo">
       <OperationParameterDataTypeRef dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::UserAgentDataInfo" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="The session information for the viewer to connect to the session. Includes the session discriminator and any other additional session relevant key value pair." freeOutputMemory="false" inputOutput="Input" name="sessionInfo">
       <OperationParameterDataTypeRef dataType="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::SessionInfo" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc9000.1.3" description="In order to take the user to the context where he left off, viewer state information (e.g. camera, occurrence visibility, etc.) are stored to the current &lt;b&gt;Awb0AutoBookmark&lt;/b&gt; for the given &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;.  This operation gets the visualization information associated to the  &lt;b&gt;Awb0Autobookmark&lt;/b&gt; for the given &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;." id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::GetVisBookmarkInfoResponse#Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement::getVisBookmarkInfo#const,std::vector&lt;Teamcenter::Awb0ProductContextInfo&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement::getVisBookmarkInfo" returnConst="false" returnDescription="The list of  &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt;  containing the  &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; instances for which the &lt;b&gt;Awb0BookmarkVisData&lt;/b&gt; was found. Following are some possible errors returned in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;169001  The Bookmark Data was not found for the given Product Context Information. This could happen if the Product Context Information does not have an Auto-bookmark.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;169002 The FMS read ticket for the visualization bookmark file could not be fetched. Please report this error to your system administrator.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::GetVisBookmarkInfoResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;s for which the visualization information associated to a bookmark has to be fetched." freeOutputMemory="false" inputOutput="Input" name="productContextInfos">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Teamcenter::Awb0ProductContextInfo" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc9000.1.3" description="When a user changes various visibility state (e.g. camera, occurrence visibility, etc) that state need to be saved/associated to a bookmark. This operation is used to associate the current visualization state information to the current &lt;b&gt;Awb0AutoBookmark&lt;/b&gt; for the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;." id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInfoResponse#Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement::saveVisBookmarkInfo#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInput&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement::saveVisBookmarkInfo" returnConst="false" returnDescription="A a list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt; and &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;. &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt;  contains  &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; instances for which the visualization state information  was saved. Following are some possible errors returned in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;169003 The Visualization Bookmark File  is not found. It was either deleted or its read permission is improperly set.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;169004 The Visualization Bookmark Data cannot be created, because some Visualization Bookmark Data are already associated to the owning Bookmark Data.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;169005 The Visualization Bookmark Data cannot be created, because the owning Bookmark Data  is invalid.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;14150 The ticket string argument is not a valid FMS transient file ticket.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInfoResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;SaveVisBookmarkInput&lt;/font&gt; which contain the information about the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; and ticket to a bookmark file in the transient volume." freeOutputMemory="false" inputOutput="Input" name="saveBookmarkInfos">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.4" description="This operation retrieves the information about the product and configurations whose product structure information is indexed. The product and configuration information are returned only for products which have been enabled for massive model visualization(MMV)." id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetIndexedProductsResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getIndexedProducts" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getIndexedProducts" returnConst="false" returnDescription="A response that contains a list of   product and configuration for which the product structure information are indexed.&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;170050  - There are no products indexed for Massive Model Visualization(MMV).&lt;br /&gt;183026 - An error was encountered while retrieving product and configuration information from &lt;b&gt;Awb0BOMIndexData&lt;/b&gt;. Please report this error to your system administrator.&lt;br /&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetIndexedProductsResponse" qualifier=""/>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.4" description="This operation retrieves the id that is used to identify a product structure information. The id is a unique identifier which gets written into the MMP file as the product Id. The Visualization Data server(VDS) maintains the product structure information for different product and configurations. Now when the Visualization client sends a request to VDS asking information about a product and configuration, the VDS invokes this operation to determine the id of the structure which contain information about the requested product and configuration.&lt;br /&gt;&lt;br /&gt;Say for example the VDS may have a product structure information with id &amp;quot;UidOfBomIndexAdminData1&amp;quot; that contains product structure information of product1 for &lt;b&gt;RevisionRule&lt;/b&gt; as &amp;quot;Latest Working&amp;quot; and &lt;b&gt;VariantRule&lt;/b&gt; &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and a product structure information with id &amp;quot;UidOfBomIndexAdminData2&amp;quot; that contains product structure information of product2 for &lt;b&gt;RevisionRule&lt;/b&gt; as &amp;quot;Latest Released&amp;quot; and &lt;b&gt;VariantRule&lt;/b&gt; &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and. Now if the Visualization client wants to display the product1 for &amp;quot;Latest working&amp;quot; with &amp;quot;vrule2&amp;quot;, it contacts the VDS server with this information. The VDS in turn  invokes this operation with the given information to determine the id of the mmp file, in this case it would return &amp;quot;UidOfBomIndexAdminData1&amp;quot; as id in its response." id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetProductStructureIdResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureIdFromRecipe#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureIdFromRecipe" returnConst="false" returnDescription=" The response contains the  id by which the  product structure information file can be identified and the configuration recipe information that needs to be applied.&lt;br /&gt;&lt;br /&gt;Following are some possible errors returned in the ServiceData. &lt;br /&gt;170051  - The product structure information is not available for the given product and configuration.&lt;br /&gt;170053  - The input product structure configuration recipe object is an invalid object.&lt;br /&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetProductStructureIdResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of product and configuration information for which the product structure id has to be determined." freeOutputMemory="false" inputOutput="Input" name="productStructureIdInput">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.4" description="This operation retrieves the full or delta product structure information for the given product and configuration. The ticket to the file(s) that contain the  product structure information is returned via this operation. &lt;br /&gt;When this operation is invoked by the client to get the full product structure file, the response may contain a single complete product structure file or a single complete product structure file and a set of delta product structure files. In case a complete and a set of files containing delta changes are sent then the receiving client has to merge the delta files into the complete structure file.&lt;br /&gt;When this operation is invoked by the client to get the delta product structure, the response may contain a set of delta product structure files or a single complete product structure file and a set of delta product structure files.  In case where only a set of delta files are returned, the client need to merge those file with its available complete structure file. When a single complete product structure file and a set of delta product structure files are returned, then this means that the delta token identifier could not be identified on the server and hence a complete product structure information has been returned.&lt;br /&gt;The response also contains a delta identifier token. This delta identifier token has to be passed during the next call to  getStructureFiles operation in case the client needs the delta files since the previous call to  getStructureFiles operation.&lt;br /&gt;" id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetStructureFilesResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureFiles#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfoInput&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureFiles" returnConst="false" returnDescription=" The response  contains the  file ticket(s) to  file(s) that contains product structure information and a next delta token identifier. The next delta token is to be used to get the delta product structure changes information files during the next call to this operation.&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;&lt;br /&gt;170051  - The product structure information is not available for the given product and configuration.&lt;br /&gt;183027  - The indexed product structure for the given product and configuration is in a failed state ." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetStructureFilesResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of product and configuration information for which the full or delta product structure information need to be retrieved." freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfoInput">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfoInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.4" description="This operation classifies &lt;b&gt;Awb0Element&lt;/b&gt; objects which are identified by their PFUID (An identifier used to identify a product structure line in ACE index BOM) into groups. In the list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;GroupOccsByPropertyInput&lt;/font&gt;, each input contains an internal property name, list of property values in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PropertyGroupingValue&lt;/font&gt; identifying the grouping criteria and a list of PFUIDs that need to be organized into groups. Each &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PropertyGroupingValue&lt;/font&gt; input contains a start and an end value. The end value is to be used for range values if populated. &lt;br /&gt;&lt;br /&gt;The response contains the PFUIDs that were grouped based on the property name and values. PFUIDs that could not be grouped as per input property names and values are retuned back in a separate list.&lt;br /&gt;" id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::OccsGroupedByPropertyResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::groupOccurrencesByProperties#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GroupOccsByPropertyInput&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::groupOccurrencesByProperties" returnConst="false" returnDescription="A structure containing a list of PFUID which are grouped based on the property name and value. The response also contains a list of PFUID which could not be grouped based upon the input criteria. &lt;br /&gt;&lt;br /&gt;Following are some possible errors returned in the &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;170050   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The input list cannot be empty.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;170051   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The internal Property name cannot be empty.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;170052    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object identifier list cannot be empty.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;170053    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Invalid property name.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::OccsGroupedByPropertyResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list containing &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;GroupOccsByPropertyInput&lt;/font&gt;  that represents property name and property value information to group a list of input pfuid." freeOutputMemory="false" inputOutput="Input" name="groupOccsByPropertyInputList">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GroupOccsByPropertyInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp04.0.0" description="This operation retrieves the id that is used to identify a product structure information. The id is a unique identifier which gets written into the MMP file as the product Id. The Visualization Data server(VDS) maintains the product structure information for different product and configurations. Now when the Visualization client sends a request to VDS asking information about a product and configuration, the VDS invokes this operation to determine the id of the structure which contain information about the requested product and configuration.&lt;br /&gt;&lt;br /&gt;Say for example the VDS may have a product structure information with id &amp;quot;UidOfBomIndexAdminData1&amp;quot; that contains product structure information of product1 for RevisionRule as &amp;quot;Latest Working&amp;quot; and VariantRule &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and a product structure information with id &amp;quot;UidOfBomIndexAdminData2&amp;quot; that contains product structure information of product2 for RevisionRule as &amp;quot;Latest Released&amp;quot; and VariantRule &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and. Now if the Visualization client wants to display the product1 for &amp;quot;Latest working&amp;quot; with &amp;quot;vrule2&amp;quot;, it contacts the VDS server with this information. The VDS in turn invokes this operation with the given information to determine the id of the mmp file, in this case it would return &amp;quot;UidOfBomIndexAdminData1&amp;quot; as id in its response." id="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization::GetProductStructureIdResponse2#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureIdFromRecipe2#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureIdFromRecipe2" returnConst="false" returnDescription="The response contains the id by which the product structure information file can be identified and the configuration recipe information that needs to be applied.&lt;br /&gt;&lt;br /&gt;Following are some possible errors returned in the ServiceData. &lt;br /&gt;170051 - The product structure information is not available for the given product and configuration.&lt;br /&gt;170053 - The input product structure configuration recipe object is an invalid object." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization::GetProductStructureIdResponse2" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of product and configuration information for which the product structure id has to be determined." freeOutputMemory="false" inputOutput="Input" name="productStructureIdInput">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp04.2.0" description="This operation exports product structure information for the Visualization Data Server (VDS), finds out the changes to that exported product structure when requested and updates the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset with a binary file (*.mmp) that contains product structure and subsequent changes.  The product and the configuration rules for which the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset is generated or updated is specified through the input structure identifier. Structure identifier is a unique string identifier representing the &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; object input to this operation. During the first call when no dataset exists for the given product, the complete structure file is generated by traversing the complete product structure. This product structure information represented in a binary file (*.mmp) and is then added to the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset as a named reference. If the given product already has an &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset with a complete mmp file, then successive calls to this operation will generate delta mmp files. The delta mmp file captures the changes that happened to the product structure since the last service operation call." id="Teamcenter::Soa::Server::ServiceData#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::processMMVIndex#const,std::string,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::processMMVIndex" returnConst="false" returnDescription="&lt;i&gt;ServiceData&lt;/i&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The Service Data through which the errors are communicated to the client.&lt;br /&gt;&lt;br /&gt;The following partial errors maybe returned in the &lt;i&gt;ServiceData&lt;/i&gt; object:&lt;br /&gt;183004 - None of the registered Product Structure providers are able to provide structure information for the given Structure ID. &lt;br /&gt;141171 - The functionality is not available with the current level of Teamcenter." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Teamcenter::Soa::Server::ServiceData" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A UID (unique identifier) representing &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; object." freeOutputMemory="false" inputOutput="Input" name="structureId">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.4" description="This operation updates the Awv0MMPDeltaCollection dataset with the file that contains product structure changes." id="Teamcenter::Soa::Server::ServiceData#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::updateDeltaCollection#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::UpdateCollectionInput&gt;,&amp;" name="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::updateDeltaCollection" returnConst="false" returnDescription="ServiceData structure that contains partial errors mapped to the input deltaCollectionIdentifier .&lt;br /&gt;The following partial errors may be returned: &lt;br /&gt;183051  - Unable to find &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset using the given collector  identifying object .&lt;br /&gt;183052 - The input file could not be associated to the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset. Please ask the system administrator to check the syslog for futher information on the failure.&lt;br /&gt;183053 - Unable to purge the the existing delta mmp files in the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Teamcenter::Soa::Server::ServiceData" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of UpdateDeltaCollectionInput which contains the information that identifies the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; and the file that need to be added to it." freeOutputMemory="false" inputOutput="Input" name="updateCollectionInput">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::UpdateCollectionInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc10000.1.4" dependencies="" description="This service operation is an extension to the service operation with the same name located in the DataManagement Interface of the Visualization service library. This extension allows the support of launching ActiveWorkspace specific objects such as Awb0Element and Awb0ProductContextInfo.&lt;br /&gt;&lt;br /&gt;This service generates a VVI information which is used to launch Teamcenter Visualization viewers with selected objects from Teamcenter and preserve a two way communication link between the viewer and the server.  This operation can return the VVI information as a string buffer or as a read file ticket to a vvi/vfz file in the FMS transient file volume. The &quot;UseTransientVolume&quot; option passed into the service via the Idinfo structure controls how the VVI launch information is returned.&lt;br /&gt;&lt;br /&gt;Obtaining the launch information as a string might be usefule to avoid setup and use of the FMS system directly by the calling client.  It is the responsibility of the client to determine how to use the returned string buffer.  For example, the vvi string buffer(s) can be written out as a vvi or vfz file on the client and passed to visualization, or the string buffer can be passed directly to embedded visualization if using the PLMVis toolkit.  &lt;br /&gt;&lt;br /&gt;If returning the launch information as a FMS transient file ticket then the operation requires the Teamcenter File Management System (FMS) to be installed (including FCC and transient volumes) in order to retrieve the VVI file from the transient file volume. When operating in this mode, the operation generates the launch file (VFZ or VVI), stores it in the FMS transient volume, and returns the FMS ticket. The client that initiated this operation is responsible for downloading the transient file (VVI or VFZ) from the transient volume to a local file system using the transient ticket. The transient (VVI or VFZ) file is consumed by the Teamcenter Visualization client. The viewer establishs a server connection and loads the object(s) specified in the VVI file.  Launch on multiple objects will generate a VFZ file (zip of all the vvi files) and transient ticket of VFZ file would be sent to client.&lt;br /&gt;&lt;br /&gt;NOTE: VVI and VFZ files are not intended to be persisted and should be generated with each launch to Teamcenter Visualization. For example, the VVI format is not guaranteed to be supported if the server or viewer is updated. VFZ files are used if more than one object is launched at a time, while VVI files are used for single objects.&lt;br /&gt;&lt;br /&gt;As with the previous createLaunchInfo service operation located in the Visualization library, this service supports launch on Teamcenter persistent objects like Dataset, Item, ItemRevision, BOMViewRevision, BOMView. It also supports launch of selected BOMLines of a configured structure from Structure Manager or BOPLines from Manufacturing Process Planner, but in this case the caller must first create a VisStructureContext object and make it the launched object. However with this operation you may also launch objects of type Awb0Element and Awb0ProductContextInfo. See description of IdInfo for details.&lt;br /&gt;&lt;br /&gt;Valid launch object types and behavior such as priority order can be configured with the Teamcenter Preferences VMU_Datasets, VMU_FileSearchOrder and VMU_RelationSearchOrder." exceptionCondition="" id="createLaunchInfo#const,std::vector&lt;Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::IdInfo&gt;,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::ServerInfo,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::UserAgentDataInfo,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::SessionInfo,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::DataManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="createLaunchInfo" opTemplate="Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::LaunchInfoResponse#Awv0::Soa::ActiveWorkspaceVis::DataManagement::createLaunchInfo#const,std::vector&lt;Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::IdInfo&gt;,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::ServerInfo,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::UserAgentDataInfo,&amp;$const,Awv0::Soa::ActiveWorkspaceVis::_2015_03::DataManagement::SessionInfo,&amp;" returnDescription="VVI file data as a string buffer or FMS file ticket for the request objects. The following partial errors may be returned:&lt;br /&gt;208031: Launch request is not valid.&lt;br /&gt;208013: The selected object is invalid for the launch operation;&lt;br /&gt;208012: Launch file generation failed." useCase="This operation supports the mechanism of visualizing Teamcenter specific objects in Teamcenter Visualization client.">
     <ParameterInfo description="A list of Teamcenter objects and related information that need to be visualized in Teamcenter Visualization. For example, if a Dataset is launched, then information about its Item, ItemRevision and type of operation, including any additional information can be provided." parameterName="idInfos"/>
     <ParameterInfo description="Server information for the viewer to connect to the server. Contains protocol, server URL, connection mode of the server and any other additional server relevant key value pair." parameterName="serverInfo"/>
     <ParameterInfo description="The information about the client that initiated the launch (e.g., application name, application version, and any other additional client application relevant key value pair)." parameterName="userDataAgentInfo"/>
     <ParameterInfo description="The session information for the viewer to connect to the session. Includes the session discriminator and any other additional session relevant key value pair." parameterName="sessionInfo"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc10000.1.4" dependencies="" description="This operation retrieves the information about the product and configurations whose product structure information is indexed. The product and configuration information are returned only for products which have been enabled for massive model visualization(MMV)." exceptionCondition="" id="getIndexedProducts#" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getIndexedProducts" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetIndexedProductsResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getIndexedProducts" returnDescription="A response that contains a list of   product and configuration for which the product structure information are indexed.&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;170050  - There are no products indexed for Massive Model Visualization(MMV).&lt;br /&gt;183026 - An error was encountered while retrieving product and configuration information from &lt;b&gt;Awb0BOMIndexData&lt;/b&gt;. Please report this error to your system administrator.&lt;br /&gt;" useCase="The Visualization Data server(VDS) is deployed on a LAN closer to the visualization client. The VDS serves the product structure information to visualization clients connecting to it. The VDS is configured to periodically communicate to the Tcserver and retrieve the indexed product structure information.&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VDS boots and invokes getIndexedProducts and gets the indexed products.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Invokes getStructureFiles operation on each of the indexed product to get the full product structure information represented in a binary file(*.mmp).&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Periodically invokes getStructureFiles operation with previous delta identifier token to retrieve the changed product structure information."/>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc10000.1.4" dependencies="getIndexedProducts" description="This operation retrieves the full or delta product structure information for the given product and configuration. The ticket to the file(s) that contain the  product structure information is returned via this operation. &lt;br /&gt;When this operation is invoked by the client to get the full product structure file, the response may contain a single complete product structure file or a single complete product structure file and a set of delta product structure files. In case a complete and a set of files containing delta changes are sent then the receiving client has to merge the delta files into the complete structure file.&lt;br /&gt;When this operation is invoked by the client to get the delta product structure, the response may contain a set of delta product structure files or a single complete product structure file and a set of delta product structure files.  In case where only a set of delta files are returned, the client need to merge those file with its available complete structure file. When a single complete product structure file and a set of delta product structure files are returned, then this means that the delta token identifier could not be identified on the server and hence a complete product structure information has been returned.&lt;br /&gt;The response also contains a delta identifier token. This delta identifier token has to be passed during the next call to  getStructureFiles operation in case the client needs the delta files since the previous call to  getStructureFiles operation.&lt;br /&gt;" exceptionCondition="" id="getStructureFiles#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfoInput&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getStructureFiles" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetStructureFilesResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureFiles#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductAndConfigInfoInput&gt;,&amp;" returnDescription=" The response  contains the  file ticket(s) to  file(s) that contains product structure information and a next delta token identifier. The next delta token is to be used to get the delta product structure changes information files during the next call to this operation.&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;&lt;br /&gt;170051  - The product structure information is not available for the given product and configuration.&lt;br /&gt;183027  - The indexed product structure for the given product and configuration is in a failed state ." useCase="The Visualization Data server(VDS) is deployed on a LAN closer to the visualization client. The VDS acts as a product structure server for the visualization clients. The VDS is configured to periodically communicate to the Tcserver and retrieve the indexed product structure information.&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VDS boots and invokes getIndexedProducts  and gets the products that are indexed.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Invokes getStructureFiles operation on each of the indexed product to get the full product structure  information represented in a binary file(*.mmp).&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Since the product structure changes are continuously tracked and product structure file produced, the response would contain a complete product structure file along with a set of delta product structure files that were generated since the complete product structure file was produced.&lt;br /&gt;4.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If the product structure information is returned as a complete file and a set of delta files then the client merges the delta file into the complete structure to get the current complete product structure.&lt;br /&gt;5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The VDS invokes getStructureFiles periodically to get the next delta that represents the product structure changes.&lt;br /&gt;6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If only delta product structure file is returned then those files are merged with the complete product structure file that the client already has.">
     <ParameterInfo description="A list of product and configuration information for which the full or delta product structure information need to be retrieved." parameterName="productAndConfigInfoInput"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc10000.1.4" dependencies="getIndexedProducts,getStructureFiles" description="This operation retrieves the id that is used to identify a product structure information. The id is a unique identifier which gets written into the MMP file as the product Id. The Visualization Data server(VDS) maintains the product structure information for different product and configurations. Now when the Visualization client sends a request to VDS asking information about a product and configuration, the VDS invokes this operation to determine the id of the structure which contain information about the requested product and configuration.&lt;br /&gt;&lt;br /&gt;Say for example the VDS may have a product structure information with id &amp;quot;UidOfBomIndexAdminData1&amp;quot; that contains product structure information of product1 for &lt;b&gt;RevisionRule&lt;/b&gt; as &amp;quot;Latest Working&amp;quot; and &lt;b&gt;VariantRule&lt;/b&gt; &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and a product structure information with id &amp;quot;UidOfBomIndexAdminData2&amp;quot; that contains product structure information of product2 for &lt;b&gt;RevisionRule&lt;/b&gt; as &amp;quot;Latest Released&amp;quot; and &lt;b&gt;VariantRule&lt;/b&gt; &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and. Now if the Visualization client wants to display the product1 for &amp;quot;Latest working&amp;quot; with &amp;quot;vrule2&amp;quot;, it contacts the VDS server with this information. The VDS in turn  invokes this operation with the given information to determine the id of the mmp file, in this case it would return &amp;quot;UidOfBomIndexAdminData1&amp;quot; as id in its response." exceptionCondition="" id="getStructureIdFromRecipe#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getStructureIdFromRecipe" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GetProductStructureIdResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureIdFromRecipe#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput&gt;,&amp;" returnDescription=" The response contains the  id by which the  product structure information file can be identified and the configuration recipe information that needs to be applied.&lt;br /&gt;&lt;br /&gt;Following are some possible errors returned in the ServiceData. &lt;br /&gt;170051  - The product structure information is not available for the given product and configuration.&lt;br /&gt;170053  - The input product structure configuration recipe object is an invalid object.&lt;br /&gt;" useCase="The Visualization Data server(VDS) is deployed on a LAN closer to the visualization client. The VDS acts as a product structure server for the visualization clients. The VDS is configured to periodically communicate to the Tcserver and retrieve the indexed product structure information.&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VDS boots and invokes getIndexedProducts  and gets the products that are indexed.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Invokes getStructureFiles operation on each of the indexed product to get the product structure information represented in a binary file(*.mmp).&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If the product structure information is returned as a complete file and a set of delta files then the client merges the delta file into the complete structure to get the current complete product structure .&lt;br /&gt;4.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If only delta product structure file is returned then those files are merged with the complete file that the client already has.&lt;br /&gt;5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A visualization client requests product structure information for a given product and configuration using a recipe object. The recipe object could be &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; or &lt;br /&gt;&lt;b&gt;VisStructureContext&lt;/b&gt; etc. Now VDS invokes getStructureIdFromRecipe to determine which file contains the requested product structure information.&lt;br /&gt;6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The spatial structure corresponding to the product structure file is then served to the visualization client for it to apply  massive model visualization algorithm.">
     <ParameterInfo description="A list of product and configuration information for which the product structure id has to be determined." parameterName="productStructureIdInput"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="Awp04.0.0" dependencies="getIndexedProducts,getStructureFiles" description="This operation retrieves the id that is used to identify a product structure information. The id is a unique identifier which gets written into the MMP file as the product Id. The Visualization Data server(VDS) maintains the product structure information for different product and configurations. Now when the Visualization client sends a request to VDS asking information about a product and configuration, the VDS invokes this operation to determine the id of the structure which contain information about the requested product and configuration.&lt;br /&gt;&lt;br /&gt;Say for example the VDS may have a product structure information with id &amp;quot;UidOfBomIndexAdminData1&amp;quot; that contains product structure information of product1 for RevisionRule as &amp;quot;Latest Working&amp;quot; and VariantRule &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and a product structure information with id &amp;quot;UidOfBomIndexAdminData2&amp;quot; that contains product structure information of product2 for RevisionRule as &amp;quot;Latest Released&amp;quot; and VariantRule &amp;quot;vrule1&amp;quot;, &amp;quot;vrule2&amp;quot;, &amp;quot;vrule3&amp;quot; and. Now if the Visualization client wants to display the product1 for &amp;quot;Latest working&amp;quot; with &amp;quot;vrule2&amp;quot;, it contacts the VDS server with this information. The VDS in turn invokes this operation with the given information to determine the id of the mmp file, in this case it would return &amp;quot;UidOfBomIndexAdminData1&amp;quot; as id in its response." exceptionCondition="" id="getStructureIdFromRecipe2#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getStructureIdFromRecipe2" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2018_05::MassiveModelVisualization::GetProductStructureIdResponse2#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::getStructureIdFromRecipe2#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::ProductStructureIdInput&gt;,&amp;" returnDescription="The response contains the id by which the product structure information file can be identified and the configuration recipe information that needs to be applied.&lt;br /&gt;&lt;br /&gt;Following are some possible errors returned in the ServiceData. &lt;br /&gt;170051 - The product structure information is not available for the given product and configuration.&lt;br /&gt;170053 - The input product structure configuration recipe object is an invalid object." useCase="The Visualization Data server(VDS) is deployed on a LAN closer to the visualization client. The VDS acts as a product structure server for the visualization clients. The VDS is configured to periodically communicate to the Tcserver and retrieve the indexed product structure information.&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VDS boots and invokes getIndexedProducts and gets the products that are indexed.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Invokes getStructureFiles operation on each of the indexed product to get the product structure information represented in a binary file(*.mmp).&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If the product structure information is returned as a complete file and a set of delta files then the client merges the delta file into the complete structure to get the current complete product structure .&lt;br /&gt;4.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If only delta product structure file is returned then those files are merged with the complete file that the client already has.&lt;br /&gt;5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A visualization client requests product structure information for a given product and configuration using a recipe object. The recipe object could be &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; or &lt;br /&gt;&lt;b&gt;VisStructureContext&lt;/b&gt; etc. Now VDS invokes getStructureIdFromRecipe to determine which file contains the requested product structure information.&lt;br /&gt;6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The spatial structure corresponding to the product structure file is then served to the visualization client for it to apply massive model visualization algorithm.">
     <ParameterInfo description="A list of product and configuration information for which the product structure id has to be determined." parameterName="productStructureIdInput"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc10000.1.4" dependencies="getStructureFiles" description="This operation classifies &lt;b&gt;Awb0Element&lt;/b&gt; objects which are identified by their PFUID (An identifier used to identify a product structure line in ACE index BOM) into groups. In the list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;GroupOccsByPropertyInput&lt;/font&gt;, each input contains an internal property name, list of property values in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PropertyGroupingValue&lt;/font&gt; identifying the grouping criteria and a list of PFUIDs that need to be organized into groups. Each &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;PropertyGroupingValue&lt;/font&gt; input contains a start and an end value. The end value is to be used for range values if populated. &lt;br /&gt;&lt;br /&gt;The response contains the PFUIDs that were grouped based on the property name and values. PFUIDs that could not be grouped as per input property names and values are retuned back in a separate list.&lt;br /&gt;" exceptionCondition="" id="groupOccurrencesByProperties#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GroupOccsByPropertyInput&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="groupOccurrencesByProperties" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::OccsGroupedByPropertyResponse#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::groupOccurrencesByProperties#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::GroupOccsByPropertyInput&gt;,&amp;" returnDescription="A structure containing a list of PFUID which are grouped based on the property name and value. The response also contains a list of PFUID which could not be grouped based upon the input criteria. &lt;br /&gt;&lt;br /&gt;Following are some possible errors returned in the &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;170050   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The input list cannot be empty.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;170051   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The internal Property name cannot be empty.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;170052    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object identifier list cannot be empty.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;170053    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Invalid property name.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="Use case1: &lt;br /&gt;Coloring the part assembly displayed in Active Workspace by visualization server when rendering in non-MMV(Massive Model Visualization) mode .&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;In the Active Workspace client, a user wants to visualize an assembly.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The color of the parts displayed in the visualization view has to match the colors on the bar chart for the objects in the search results.&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The AW visualization client invokes the visualization server with the criteria that contain the color code to group the rendered objects based on the property name and property values.&lt;br /&gt;4.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The AW visualization server initially renders all the current objects it has in its view in a see through mode&lt;br /&gt;5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The AW visualization server now invokes &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;Teamcenter::Soa::Query::_2014_11::Finder:: groupObjectsByProperties&lt;/font&gt; and passes the property name, property values and the objects that it is currently displaying.&lt;br /&gt;6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AW visualization server on receiving the objects grouped based on property names and values, renders the parts based on the colors associated to the group.&lt;br /&gt;&lt;br /&gt;Use case2: &lt;br /&gt;Coloring the part assembly displayed in Active Workspace by visualization server when rendering in MMV(Massive Model Visualization) mode .&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;In the Active Workspace client, a user wants to visualize an assembly.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The color of the parts displayed in the visualization view has to match the colors on the bar chart for the objects in the search results.&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The AW visualization client invokes the visualization server with the criteria that contain the color code to group the rendered objects based on the property name and property values.&lt;br /&gt;4.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The AW visualization server initially renders all the current objects it has in its view in a see through mode&lt;br /&gt;5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The AW visualization server since it is rendering in MMV mode does not have Business Objects instead has the PFUID of the parts. The AW visualization server now invokes &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;groupOccurrencesByProperties&lt;/font&gt; and passes the property name, property values, and the PFUID of the objects that it is currently displaying.&lt;br /&gt;6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AW visualization server on receiving the PFUID grouped based on property names and values, renders the parts based on the colors associated to the group.">
     <ParameterInfo description="A list containing &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;GroupOccsByPropertyInput&lt;/font&gt;  that represents property name and property value information to group a list of input pfuid." parameterName="groupOccsByPropertyInputList"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="Awp04.2.0" dependencies="" description="This operation exports product structure information for the Visualization Data Server (VDS), finds out the changes to that exported product structure when requested and updates the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset with a binary file (*.mmp) that contains product structure and subsequent changes.  The product and the configuration rules for which the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset is generated or updated is specified through the input structure identifier. Structure identifier is a unique string identifier representing the &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; object input to this operation. During the first call when no dataset exists for the given product, the complete structure file is generated by traversing the complete product structure. This product structure information represented in a binary file (*.mmp) and is then added to the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset as a named reference. If the given product already has an &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset with a complete mmp file, then successive calls to this operation will generate delta mmp files. The delta mmp file captures the changes that happened to the product structure since the last service operation call." exceptionCondition="" id="processMMVIndex#const,std::string,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="processMMVIndex" opTemplate="Teamcenter::Soa::Server::ServiceData#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::processMMVIndex#const,std::string,&amp;" returnDescription="&lt;i&gt;ServiceData&lt;/i&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The Service Data through which the errors are communicated to the client.&lt;br /&gt;&lt;br /&gt;The following partial errors maybe returned in the &lt;i&gt;ServiceData&lt;/i&gt; object:&lt;br /&gt;183004 - None of the registered Product Structure providers are able to provide structure information for the given Structure ID. &lt;br /&gt;141171 - The functionality is not available with the current level of Teamcenter." useCase="The system administrator sets up the &lt;i&gt;runTcFTSIndexer&lt;/i&gt; (&lt;i&gt;TeamcenterFTSIndexer&lt;/i&gt;) utility to run periodically. To enable MMV (Massive Model Visualization) for a particular product, the system administrator performs the following sequence that generates an &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset for the product:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   1. Create a text file which contains the information about the product and RevisionRule and or SavedVariantRule that must be used for configuration. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   2. Execute &lt;i&gt;bomindex_admin&lt;/i&gt; utility using &lt;i&gt;-function=create&lt;/i&gt; option and provide the text file that contains the product and the configuration rules. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   3. Executing the &lt;i&gt;bomindex_admin&lt;/i&gt; utility persists the product and the configuration rules on &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; instance with &lt;i&gt;&amp;quot;ReadyToIndex&amp;quot;&lt;/i&gt; state.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   4. The &lt;i&gt;runTcFTSIndexer&lt;/i&gt; utility performs the following sequence to create &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset for a configured product:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Finds all the &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; instances in the database using the &lt;i&gt;findObjectsByClassAndAttributes&lt;/i&gt; operation from the Finder service. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Invokes &lt;i&gt;processMMVIndex&lt;/i&gt; with &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; instance identifier.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Once the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset for a configured product is being created and updated periodically by the FTSIndexer, the Visualization Data Server (VDS) utility will access the mmp files stored in the dataset using the &lt;i&gt;getStructureFiles&lt;/i&gt; SOA. The&lt;i&gt; getStructureFiles&lt;/i&gt; SOA returns the mmp files created and maintained by the FTSIndexer calling &lt;i&gt;processMMVIndex&lt;/i&gt; SOA.  The end result is indexing and updating structure data in the VDS to support MMV.">
     <ParameterInfo description="A UID (unique identifier) representing &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; object." parameterName="structureId"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc10000.1.4" dependencies="processBomIndex,commitRegularFiles,getRegularFileTicketsForUpload,findObjectsByClassAndAttributes" description="This operation updates the Awv0MMPDeltaCollection dataset with the file that contains product structure changes." exceptionCondition="" id="updateDeltaCollection#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::UpdateCollectionInput&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="updateDeltaCollection" opTemplate="Teamcenter::Soa::Server::ServiceData#Awv0::Soa::ActiveWorkspaceVis::MassiveModelVisualization::updateDeltaCollection#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2015_03::MassiveModelVisualization::UpdateCollectionInput&gt;,&amp;" returnDescription="ServiceData structure that contains partial errors mapped to the input deltaCollectionIdentifier .&lt;br /&gt;The following partial errors may be returned: &lt;br /&gt;183051  - Unable to find &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset using the given collector  identifying object .&lt;br /&gt;183052 - The input file could not be associated to the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset. Please ask the system administrator to check the syslog for futher information on the failure.&lt;br /&gt;183053 - Unable to purge the the existing delta mmp files in the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; dataset." useCase="The system administrator sets up the runTcFTSIndexer to run periodically.&lt;br /&gt;1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The TcFtsIndexer finds all the &lt;b&gt;Awb0BOMIndexAdminData&lt;/b&gt; that contains product and configuration whose product structure  need to be indexed.&lt;br /&gt;2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Invokes processBomIndex operation which returns the product structure information in TcXML format.&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TcXML file is transformed into SOLR schema and uploaded into SOLR.&lt;br /&gt;4.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TcXML file is also transformed into MMP format using the tcxml2mmp converter utility.&lt;br /&gt;5.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;An upload ticket is obtained for the MMP file using the getRegularFileTicketsForUpload operation.&lt;br /&gt;6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The file is uploaded to Teamcenter volume using FCC.&lt;br /&gt;7.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The uploaded file is committed to Teamcenter as &lt;b&gt;ImanFile&lt;/b&gt; object using commitRegularFiles operation.&lt;br /&gt;8.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The &lt;b&gt;ImanFile&lt;/b&gt; object is now associated to &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; using updateDeltaCollection.">
     <ParameterInfo description="A list of UpdateDeltaCollectionInput which contains the information that identifies the &lt;b&gt;Awv0MMPDeltaCollection&lt;/b&gt; and the file that need to be added to it." parameterName="updateCollectionInput"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc9000.1.3" dependencies="getOccurrencesInProduct" description="In order to take the user to the context where he left off, viewer state information (e.g. camera, occurrence visibility, etc.) are stored to the current &lt;b&gt;Awb0AutoBookmark&lt;/b&gt; for the given &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;.  This operation gets the visualization information associated to the  &lt;b&gt;Awb0Autobookmark&lt;/b&gt; for the given &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;." exceptionCondition="" id="getVisBookmarkInfo#const,std::vector&lt;Teamcenter::Awb0ProductContextInfo&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getVisBookmarkInfo" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::GetVisBookmarkInfoResponse#Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement::getVisBookmarkInfo#const,std::vector&lt;Teamcenter::Awb0ProductContextInfo&gt;,&amp;" returnDescription="The list of  &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt;  containing the  &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; instances for which the &lt;b&gt;Awb0BookmarkVisData&lt;/b&gt; was found. Following are some possible errors returned in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;169001  The Bookmark Data was not found for the given Product Context Information. This could happen if the Product Context Information does not have an Auto-bookmark.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;169002 The FMS read ticket for the visualization bookmark file could not be fetched. Please report this error to your system administrator.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="The user searches for a product clicks on the viewer tab from the Active Content  Experience(ACE) location in Active Workspace.&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;A launch file(.vvi) containing the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; information gets created. This file is uploaded to the visualization server.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Viewer which is running in the visualization server reads this launch file and loads the occurrences for the given &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Viewer invokes &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;getVisBookmarkInfo&lt;/font&gt;, downloads the file containing the visualization information using the read tickets returned in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfoResponse&lt;/font&gt;, reads the file and sets the visualization state that would take the user back to where he left off.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;">
     <ParameterInfo description="A list of &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;s for which the visualization information associated to a bookmark has to be fetched." parameterName="productContextInfos"/>
   </Operation>
   <Operation canOverride="false" component="Awv0ActiveWorkspaceVis" createRelease="tc9000.1.3" dependencies="getOccurrencesInProduct" description="When a user changes various visibility state (e.g. camera, occurrence visibility, etc) that state need to be saved/associated to a bookmark. This operation is used to associate the current visualization state information to the current &lt;b&gt;Awb0AutoBookmark&lt;/b&gt; for the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;." exceptionCondition="" id="saveVisBookmarkInfo#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInput&gt;,&amp;" interface="Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="saveVisBookmarkInfo" opTemplate="Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInfoResponse#Awv0::Soa::ActiveWorkspaceVis::OccurrenceManagement::saveVisBookmarkInfo#const,std::vector&lt;Awv0::Soa::Internal::ActiveWorkspaceVis::_2014_11::OccurrenceManagement::SaveVisBookmarkInput&gt;,&amp;" returnDescription="A a list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt; and &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;. &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;VisBookmarkInfo&lt;/font&gt;  contains  &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; instances for which the visualization state information  was saved. Following are some possible errors returned in &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;ServiceData&lt;/font&gt;:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;169003 The Visualization Bookmark File  is not found. It was either deleted or its read permission is improperly set.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;169004 The Visualization Bookmark Data cannot be created, because some Visualization Bookmark Data are already associated to the owning Bookmark Data.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;169005 The Visualization Bookmark Data cannot be created, because the owning Bookmark Data  is invalid.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;14150 The ticket string argument is not a valid FMS transient file ticket.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="The user searches for a product clicks on the viewer tab from the Active Content  Experience(ACE) location in Active Workspace.&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;A launch file(.vvi) containing the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; gets created. This file is uploaded to the visualization server.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Viewer which is running in the visualization server reads this launch file and loads the occurrences for the given &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;User changes occurrence visibility or camera angle, the viewer writes the changed information into a file. &lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;The file is now uploaded by viewer to the transient volume, invokes &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;saveVisBookmarkInfo&lt;/font&gt; to save the changed viewer information as &lt;b&gt;ImanFile&lt;/b&gt; object and associate it to the current Awb0AutoBookmark for the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;">
     <ParameterInfo description="A list of &lt;font face=&quot;courier&quot; height=&quot;10&quot;&gt;SaveVisBookmarkInput&lt;/font&gt; which contain the information about the &lt;b&gt;Awb0ProductContextInfo&lt;/b&gt; and ticket to a bookmark file in the transient volume." parameterName="saveBookmarkInfos"/>
   </Operation>
   <TcGlobalConstantAttach constantName="Fnd0SelectedLocales" value="cs_CZ,de_DE,en_US,es_ES,fr_FR,it_IT,ja_JP,ko_KR,pl_PL,pt_BR,ru_RU,zh_CN,zh_TW"/>

   <Library createRelease="tc10000.1.2" description="Library to support MMV functionality." isThirdParty="false" name="Awv0activeworkspacemmv" namespace="" serviceLibrary="false">
     <DependentOn name="metaframework"/>
     <DependentOn name="tccore"/>
     <DependentOn name="tc"/>
     <DependentOn name="cxpom"/>
   </Library>
   <ExternalDataType createRelease="tc10000.1.2" declarationHeader="Awv0activeworkspacemmv/Awv0ConfigurationDataTypes.hxx" description="This contain the information and product and the configuration information." name="ProductAndConfigurationInfo" namespace="awv0activeworkspacevis::Mmv"/>
   <TcClass className="Awv0MMPDeltaCollection" description="" isExportable="false" isUninheritable="false" isUninstantiable="false" parentClassName="Dataset">
     <TcAttribute attributeName="awv0StructureId" attributeType="POM_string" description="awv0StructureId is a string property that uniquely identifies a Awv0MMPDeltaCollection dataset for a given product and configuration(s). &#10;For example in case of IndexBOM, the uid of Awb0IndexBOMData for which the mmp files are collected in the dataset  is stored as awv0StructureId.&#10;This property cannot be NULL." exportAsString="false" followOnExport="false" initialValue="" isArray="false" isCandidateKey="false" isNullsAllowed="true" isPublicRead="true" isPublicWrite="true" isTransient="false" isUnique="false" lowerBoundValue="" maxStringLength="128" noBackpointer="false" upperBoundValue=""/>
   </TcClass>
   <TcClass className="Awv0MMVIndexAdminInfo" description="" isExportable="false" isUninheritable="false" isUninstantiable="false" parentClassName="POM_object">
     <TcAttribute attributeName="awv0ProductAndConfig" attributeType="POM_untyped_reference" description="awv0ProductAndConfig is an untyped reference to the object that holds the product and configuration for which the MMV is enabled. This would be pointing AwboBOMIndexAdminData in case of BVR model. NULL  is not allowed." exportAsString="false" followOnExport="false" isArray="false" isCandidateKey="false" isNullsAllowed="true" isPublicRead="true" isPublicWrite="true" isTransient="false" isUnique="false" maxStringLength="0" noBackpointer="false"/>
     <TcAttribute attributeName="awv0MMVIndexOwningUser" attributeType="POM_typed_reference" description="awv0MMVIndexOwningUser is a typed reference to a User object which specifies who should own the Awv0MMPDeltaCollection dataset. By providing awv0MMVIndexOwningUser the Awv0MMPDeltaCollection for the given product and configuration is only visible to the mentioned user. NULL is allowed, incase no value is provided then the user who is indexing the structure is used for populating this property." exportAsString="false" followOnExport="false" isArray="false" isCandidateKey="false" isNullsAllowed="true" isPublicRead="true" isPublicWrite="true" isTransient="false" isUnique="false" maxStringLength="0" noBackpointer="false" typedRefClassName="User"/>
     <TcAttribute arrayLength="-1" attributeName="awv0MMVIdxAccessControllers" attributeType="POM_external_reference" description="awv0MMVIdxAccessController is  a list of objects that grants or revokes access to the Massive Model Visualization(MMV) files. The users who can access the MMV index files can be specified via this property. The contents of the MMV Index files will be made readable only if the current user is listed in this property or any object listed(other that user object) in this property grants read access to the current user.  The contents(structure nodes) of the files will be still subjected to access check in order to adhere to export compliance. Say for example VDS running with a particular user id when invokes getIndexedProducts, would get only the products mentioned in the BIAD with the logged in user  listed in this property." exportAsString="false" followOnExport="false" isArray="true" isCandidateKey="false" isNullsAllowed="true" isPublicRead="true" isPublicWrite="true" isTransient="false" isUnique="false" maxStringLength="0" noBackpointer="false"/>
   </TcClass>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp03.3.0" description="This operation computes the complete or delta structure file and updates the Delta collection dataset." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GeneratePSFileAndUpdateCollection#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GeneratePSFileAndUpdateCollection" returnConst="false" returnDescription="" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Product and configuration information" freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="The operation gets the complete product structure information serialized as MMP file." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetCompletePSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetCompletePSFile" returnConst="false" returnDescription="The producture structure information is serialized as MMP file in given location." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The product and configuration for which the full product information has to be generated." freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="The file location where the product structure file needs to be writen" freeOutputMemory="false" inputOutput="Input" name="fileLocation">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp03.3.0" description="The operation that generates the delta product structure file." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetDeltaPSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetDeltaPSFile" returnConst="false" returnDescription="" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Product and configuration information" freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="Delta file path" freeOutputMemory="false" inputOutput="Input" name="deltaFileLocation">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp03.3.0" description="This operation retrieves the export compliant complete and delta file tickets. Nodes within complete and delta MMP files are filtered by evaluating read expressions. Each provider can have its own rules for product structure parsing within MMP file. This operation makes every provider to implement their logic of traversing MMP files and filtering the nodes based on read expression evaluation." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetExportCompliantStructureFiles#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*$std::string,*$std::vector&lt;std::string&gt;,*$std::string,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetExportCompliantStructureFiles" returnConst="false" returnDescription="" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Product and configuration information" freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="Last delta identifer token" freeOutputMemory="false" inputOutput="Input" name="deltaIdentifierToken">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Complete file read ticket" freeOutputMemory="false" inputOutput="Output" name="completeFileReadTicket">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Delta file read tickets" freeOutputMemory="false" inputOutput="Output" name="deltaFileReadTickets">
       <OperationParameterDataTypeRef dataType="std::vector&lt;std::string&gt;" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Next delta identifer token" freeOutputMemory="false" inputOutput="Output" name="nextDeltaIdentifierToken">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="This operation returns the product and the configuration for which the structure information has been indexed." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetIndexedProductsAndConfigurations#std::vector&lt;awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo&gt;,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetIndexedProductsAndConfigurations" returnConst="false" returnDescription="A list of ProductAndConfiguration information." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="false" defaultValue="" description="List of product and configuration for which product structure indices exist." freeOutputMemory="false" inputOutput="Output" name="productAndConfigInfos">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="*">
         <DataTypeRefParam dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp03.3.0" description="The operation retrieves the corresponding Teamcenter objects for the MMV identifiers. Typically in cases like Index BOM, the pfuid is used to identify a node in the MMV mode. These nodes may have to be converted into their corresponding ACE objects so that features like Part coloring etc. can be supported in MMV mode." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetObjectsForLineIdentifiers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::vector&lt;std::string&gt;,*$std::vector&lt;tag_t&gt;,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetObjectsForLineIdentifiers" returnConst="false" returnDescription="" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Product and configuration information" freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="Identifiers to be converted into teamcenter objects." freeOutputMemory="false" inputOutput="Input" name="identifiers">
       <OperationParameterDataTypeRef dataType="std::vector&lt;std::string&gt;" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Teamcenter objects corresponding to the input identifiers." freeOutputMemory="false" inputOutput="Output" name="tcObjects">
       <OperationParameterDataTypeRef dataType="std::vector&lt;tag_t&gt;" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="Given a recipe object this operation retrieves the product and configuration information from it." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetProductAndConfigFromRecipe#tag_t$awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetProductAndConfigFromRecipe" returnConst="false" returnDescription="The product and configuration information." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="false" defaultValue="" description="The recipe object." freeOutputMemory="false" inputOutput="Input" name="recipeObject">
       <OperationParameterDataTypeRef dataType="tag_t" qualifier=""/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Product and Configuration information." freeOutputMemory="false" inputOutput="Output" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp03.3.0" description="The operation returns the information about the user who can own the Delta collection dataset and the users(user id) or the Buiness Objects that control the retrieval access of the product and configuration into VDS." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetPSFileAdminAndAccessControllers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$tag_t,*$std::vector&lt;tag_t&gt;,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetPSFileAdminAndAccessControllers" returnConst="false" returnDescription="" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Product and configuration information" freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Owning User who can own the Delta collection dataset." freeOutputMemory="false" inputOutput="Output" name="admin">
       <OperationParameterDataTypeRef dataType="tag_t" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Users who can own the delta collection dataset and the users (user id) or business objects that control the retrieval access of the product and configuration into VDS," freeOutputMemory="false" inputOutput="Output" name="controllers">
       <OperationParameterDataTypeRef dataType="std::vector&lt;tag_t&gt;" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="This operation provides the id by which the mmp file can be identified for the give product and configuration." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetStructureId#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$std::string,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetStructureId" returnConst="false" returnDescription="The id string which is used to identify the mmp file." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Product and Configuration information." freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="The structure id for this product and configuration." freeOutputMemory="false" inputOutput="Output" name="structureId">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="Whether the product structure provider supports delta." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsDeltaSupported#bool,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsDeltaSupported" returnConst="false" returnDescription="Returns true if the provider supports delta product structure." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="false" defaultValue="" description="Delta product structure support verdict." freeOutputMemory="false" inputOutput="Output" name="deltaSupported">
       <OperationParameterDataTypeRef dataType="bool" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="Given a recipe object like VisStructureContext or Awb0ProductContextInfo, the provider checks if it is capable of providing structure information." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsProductAndConfigInRecipeSupported#tag_t$bool,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsProductAndConfigInRecipeSupported" returnConst="false" returnDescription="Returns true if the product and configuration pointed by the recipe object is supported" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="false" defaultValue="" description="The recipe Object." freeOutputMemory="false" inputOutput="Input" name="recipeObject">
       <OperationParameterDataTypeRef dataType="tag_t" qualifier=""/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="True if the product and configuration pointed by the recipe object is supported" freeOutputMemory="false" inputOutput="Output" name="isSupported">
       <OperationParameterDataTypeRef dataType="bool" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc10000.1.2" description="Checks if the provider can provide structure information for given product and configuration." id="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsProductAndConfigSupported#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$bool,*" name="awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsProductAndConfigSupported" returnConst="false" returnDescription="True if the product and configuration is supported" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="int" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The product and configuration information." freeOutputMemory="false" inputOutput="Input" name="productAndConfigInfo">
       <OperationParameterDataTypeRef dataType="awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo" qualifier="*"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Whether the provider supports the given product and configuration." freeOutputMemory="false" inputOutput="Output" name="isSupported">
       <OperationParameterDataTypeRef dataType="bool" qualifier="*"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationInputType artifactName="Awv0BOMIndexPSProviderCreI" description="CreateInput object for &quot;Awv0BOMIndexPSProvider&quot; business object" isAbstract="false" parentTypeName="Awv0ProductStructurePr_alt0CreI" typeClassName="Awv0BOMIndexPSProviderCreI" typeName="Awv0BOMIndexPSProviderCreI"/>
   <OperationInputType artifactName="Awv0BOMIndexPSProviderSvAI" description="SaveAsInput object for &quot;Awv0BOMIndexPSProvider&quot; business object" isAbstract="false" parentTypeName="Awv0ProductStructurePr_alt0SvAI" typeClassName="Awv0BOMIndexPSProviderSvAI" typeName="Awv0BOMIndexPSProviderSvAI"/>
   <OperationInputType artifactName="Awv0MMPDeltaCollectionCreI" description="CreateInput object for &quot;Awv0MMPDeltaCollection&quot; business object" isAbstract="false" parentTypeName="DatasetCreI" typeClassName="Awv0MMPDeltaCollectionCreI" typeName="Awv0MMPDeltaCollectionCreI"/>
   <OperationInputType artifactName="Awv0MMPDeltaCollectionSvAI" description="SaveAsInput object for &quot;Awv0MMPDeltaCollection&quot; business object" isAbstract="false" parentTypeName="DatasetSvAI" typeClassName="Awv0MMPDeltaCollectionSvAI" typeName="Awv0MMPDeltaCollectionSvAI"/>
   <OperationInputType artifactName="Awv0MMVIndexAdminInfoCreI" description="CreateInput object for &quot;Awv0MMVIndexAdminInfo&quot; business object" isAbstract="false" parentTypeName="POM_objectCreI" typeClassName="Awv0MMVIndexAdminInfoCreI" typeName="Awv0MMVIndexAdminInfoCreI">
     <OperationInputProperty compoundObjectConstant="" compoundObjectType="" description="awv0ProductAndConfig is an untyped reference to the object that holds the product and configuration for which the MMV is enabled. This would be pointing AwboBOMIndexAdminData in case of BVR model. NULL  is not allowed." fieldType="SimpleProperty" propName="awv0ProductAndConfig" srcPropName="awv0ProductAndConfig"/>
     <OperationInputProperty compoundObjectConstant="" compoundObjectType="" description="awv0MMVIndexOwningUser is a typed reference to a User object which specifies who should own the Awv0MMPDeltaCollection dataset." fieldType="SimpleProperty" propName="awv0MMVIndexOwningUser" srcPropName="awv0MMVIndexOwningUser"/>
     <OperationInputProperty compoundObjectConstant="" compoundObjectType="" description="awv0MMVIdxAccessController is  a list of objects that grants or revokes access to the Massive Model Visualization(MMV) files. The users who can access the MMV index files can be specified via this property." fieldType="SimpleProperty" propName="awv0MMVIdxAccessControllers" srcPropName="awv0MMVIdxAccessControllers"/>
   </OperationInputType>
   <OperationInputType artifactName="Awv0MMVIndexAdminInfoSvAI" description="SaveAsInput object for &quot;Awv0MMVIndexAdminInfo&quot; business object" isAbstract="false" parentTypeName="POM_objectSvAI" typeClassName="Awv0MMVIndexAdminInfoSvAI" typeName="Awv0MMVIndexAdminInfoSvAI"/>
   <OperationInputType artifactName="Awv0ProductStructurePr_alt0CreI" description="CreateInput object for &quot;Awv0ProductStructureProvider&quot; business object" isAbstract="false" parentTypeName="RuntimeBusinessObjectCreI" typeClassName="Awv0ProductStructurePr_alt0CreI" typeName="Awv0ProductStructurePr_alt0CreI"/>
   <OperationInputType artifactName="Awv0ProductStructurePr_alt0SvAI" description="SaveAsInput object for &quot;Awv0ProductStructureProvider&quot; business object" isAbstract="false" parentTypeName="RuntimeBusinessObjectSvAI" typeClassName="Awv0ProductStructurePr_alt0SvAI" typeName="Awv0ProductStructurePr_alt0SvAI"/>
   <TcDataset artifactName="Awv0MMPDeltaCollection" description="Awv0MMPDeltaCollection is a dataset that acts as a collector of mmp files which are used for Massive Model Visualization (MMV). MMP files used for MMV are created by Awv0ProductStructureProvider for the supported product and configuration." isAbstract="false" parentTypeName="Dataset" typeClassName="Awv0MMPDeltaCollection" typeName="Awv0MMPDeltaCollection">
     <TcDSViewTool name="PV"/>
     <TcDSEditTool name="PV"/>
     <TcDatasetReference name="Awv0CompleteFile">
       <TcDatasetReferenceInfo format="BINARY" template="*.mmp"/>
     </TcDatasetReference>
     <TcDatasetReference name="Awv0DeltaFile">
       <TcDatasetReferenceInfo format="BINARY" template="*.mmp"/>
     </TcDatasetReference>
   </TcDataset>
   <TcRuntimeType artifactName="Awv0BOMIndexPSProvider" description="Awv0BOMIndexPSProvider implements the Awv0ProductStructProvider interfaces for retrieving the product structure information for a given product and configuration from the IndexBOM tables.&#10;Awb0BOMIndexAdminData instances contain the information about the products and configurations that are indexed. The implementation refers to Awb0BOMIndexAdminData instances and retrieves the structure information if a product and configuration that is indexed is MMV enabled." isAbstract="false" parentTypeName="Awv0ProductStructureProvider" typeClassName="Awv0BOMIndexPSProvider" typeName="Awv0BOMIndexPSProvider"/>
   <TcRuntimeType artifactName="Awv0ProductStructureProvider" description="Awv0ProductStructureProvider is a base class that provides operation interfaces to retrieve product structure information in a mmp file format for visualization purposes. Massive Model Visualization (MMV) in Active Workspace is a technology that enables to visualize very large structures in a highly performant manner. To enable MMV, the product structure information must be pre-fetched in the form of mmp file format. Product structure in Teamcenter is present in different flavors like BomViewRevision(BVR) model, Indexed Model(BVR model is indexed), 4GD etc. Each flavor has a distinct way to retrieve the structure information. By sub-classing this class and implementing the interface operation, a facade model to retrieve product structure in mmp file format for a given product and configuration(s) can be achieved. This way the client application need not have separate services for each flavor of product structure. For example Awv0BOMIndexPSProvider provides product structure information for IndexBOM structures." isAbstract="false" parentTypeName="RuntimeBusinessObject" typeClassName="Awv0ProductStructureProvider" typeName="Awv0ProductStructureProvider"/>
   <TcStandardType artifactName="Awv0MMVIndexAdminInfo" description="This object is responsible for administration information related to MMV files." isAbstract="false" parentTypeName="POM_object" typeClassName="Awv0MMVIndexAdminInfo" typeName="Awv0MMVIndexAdminInfo"/>
   <BusinessObjectInterface createRelease="tc10000.1.2" description="Interface Name for Business Object Awv0BOMIndexPSProvider" libraryName="Awv0activeworkspacemmv" name="Awv0BOMIndexPSProvider" namespace="awv0activeworkspacevis" primaryInterface="true" typeName="Awv0BOMIndexPSProvider"/>
   <BusinessObjectInterface createRelease="tc10000.1.2" description="Interface Name for Business Object Awv0ProductStructureProvider" libraryName="Awv0activeworkspacemmv" name="Awv0ProductStructureProvider" namespace="awv0activeworkspacevis" primaryInterface="true" typeName="Awv0ProductStructureProvider"/>
   <Operation canOverride="true" component="" createRelease="Awp03.3.0" dependencies="" description="This operation computes the complete or delta structure file and updates the Delta collection dataset." exceptionCondition="" id="awv0GeneratePSFileAndUpdateCollection#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GeneratePSFileAndUpdateCollection" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GeneratePSFileAndUpdateCollection#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" returnDescription="" useCase="">
     <ParameterInfo description="Product and configuration information" parameterName="productAndConfigInfo"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="The operation gets the complete product structure information serialized as MMP file." exceptionCondition="" id="awv0GetCompletePSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetCompletePSFile" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetCompletePSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" returnDescription="The producture structure information is serialized as MMP file in given location." useCase="">
     <ParameterInfo description="The product and configuration for which the full product information has to be generated." parameterName="productAndConfigInfo"/>
     <ParameterInfo description="The file location where the product structure file needs to be writen" parameterName="fileLocation"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="Awp03.3.0" dependencies="" description="The operation that generates the delta product structure file." exceptionCondition="" id="awv0GetDeltaPSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetDeltaPSFile" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetDeltaPSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" returnDescription="" useCase="">
     <ParameterInfo description="Product and configuration information" parameterName="productAndConfigInfo"/>
     <ParameterInfo description="Delta file path" parameterName="deltaFileLocation"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="Awp03.3.0" dependencies="" description="This operation retrieves the export compliant complete and delta file tickets. Nodes within complete and delta MMP files are filtered by evaluating read expressions. Each provider can have its own rules for product structure parsing within MMP file. This operation makes every provider to implement their logic of traversing MMP files and filtering the nodes based on read expression evaluation." exceptionCondition="" id="awv0GetExportCompliantStructureFiles#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*$std::string,*$std::vector&lt;std::string&gt;,*$std::string,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetExportCompliantStructureFiles" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetExportCompliantStructureFiles#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*$std::string,*$std::vector&lt;std::string&gt;,*$std::string,*" returnDescription="" useCase="">
     <ParameterInfo description="Product and configuration information" parameterName="productAndConfigInfo"/>
     <ParameterInfo description="Last delta identifer token" parameterName="deltaIdentifierToken"/>
     <ParameterInfo description="Complete file read ticket" parameterName="completeFileReadTicket"/>
     <ParameterInfo description="Delta file read tickets" parameterName="deltaFileReadTickets"/>
     <ParameterInfo description="Next delta identifer token" parameterName="nextDeltaIdentifierToken"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="This operation returns the product and the configuration for which the structure information has been indexed." exceptionCondition="" id="awv0GetIndexedProductsAndConfigurations#std::vector&lt;awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo&gt;,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetIndexedProductsAndConfigurations" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetIndexedProductsAndConfigurations#std::vector&lt;awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo&gt;,*" returnDescription="A list of ProductAndConfiguration information." useCase="">
     <ParameterInfo description="List of product and configuration for which product structure indices exist." parameterName="productAndConfigInfos"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="Awp03.3.0" dependencies="" description="The operation retrieves the corresponding Teamcenter objects for the MMV identifiers. Typically in cases like Index BOM, the pfuid is used to identify a node in the MMV mode. These nodes may have to be converted into their corresponding ACE objects so that features like Part coloring etc. can be supported in MMV mode." exceptionCondition="" id="awv0GetObjectsForLineIdentifiers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::vector&lt;std::string&gt;,*$std::vector&lt;tag_t&gt;,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetObjectsForLineIdentifiers" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetObjectsForLineIdentifiers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::vector&lt;std::string&gt;,*$std::vector&lt;tag_t&gt;,*" returnDescription="" useCase="">
     <ParameterInfo description="Product and configuration information" parameterName="productAndConfigInfo"/>
     <ParameterInfo description="Identifiers to be converted into teamcenter objects." parameterName="identifiers"/>
     <ParameterInfo description="Teamcenter objects corresponding to the input identifiers." parameterName="tcObjects"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="Given a recipe object this operation retrieves the product and configuration information from it." exceptionCondition="" id="awv0GetProductAndConfigFromRecipe#tag_t$awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetProductAndConfigFromRecipe" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetProductAndConfigFromRecipe#tag_t$awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" returnDescription="The product and configuration information." useCase="">
     <ParameterInfo description="The recipe object." parameterName="recipeObject"/>
     <ParameterInfo description="Product and Configuration information." parameterName="productAndConfigInfo"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="Awp03.3.0" dependencies="" description="The operation returns the information about the user who can own the Delta collection dataset and the users(user id) or the Buiness Objects that control the retrieval access of the product and configuration into VDS." exceptionCondition="" id="awv0GetPSFileAdminAndAccessControllers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$tag_t,*$std::vector&lt;tag_t&gt;,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetPSFileAdminAndAccessControllers" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetPSFileAdminAndAccessControllers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$tag_t,*$std::vector&lt;tag_t&gt;,*" returnDescription="" useCase="">
     <ParameterInfo description="Product and configuration information" parameterName="productAndConfigInfo"/>
     <ParameterInfo description="Owning User who can own the Delta collection dataset." parameterName="admin"/>
     <ParameterInfo description="Users who can own the delta collection dataset and the users (user id) or business objects that control the retrieval access of the product and configuration into VDS," parameterName="controllers"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="This operation provides the id by which the mmp file can be identified for the give product and configuration." exceptionCondition="" id="awv0GetStructureId#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$std::string,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0GetStructureId" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0GetStructureId#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$std::string,*" returnDescription="The id string which is used to identify the mmp file." useCase="">
     <ParameterInfo description="Product and Configuration information." parameterName="productAndConfigInfo"/>
     <ParameterInfo description="The structure id for this product and configuration." parameterName="structureId"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="Whether the product structure provider supports delta." exceptionCondition="" id="awv0IsDeltaSupported#bool,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0IsDeltaSupported" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsDeltaSupported#bool,*" returnDescription="Returns true if the provider supports delta product structure." useCase="">
     <ParameterInfo description="Delta product structure support verdict." parameterName="deltaSupported"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="Given a recipe object like VisStructureContext or Awb0ProductContextInfo, the provider checks if it is capable of providing structure information." exceptionCondition="" id="awv0IsProductAndConfigInRecipeSupported#tag_t$bool,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0IsProductAndConfigInRecipeSupported" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsProductAndConfigInRecipeSupported#tag_t$bool,*" returnDescription="Returns true if the product and configuration pointed by the recipe object is supported" useCase="">
     <ParameterInfo description="The recipe Object." parameterName="recipeObject"/>
     <ParameterInfo description="True if the product and configuration pointed by the recipe object is supported" parameterName="isSupported"/>
   </Operation>
   <Operation canOverride="true" component="" createRelease="tc10000.1.2" dependencies="" description="Checks if the provider can provide structure information for given product and configuration." exceptionCondition="" id="awv0IsProductAndConfigSupported#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$bool,*" interface="awv0activeworkspacevis::Awv0ProductStructureProvider" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="awv0IsProductAndConfigSupported" opTemplate="int#awv0activeworkspacevis::Awv0ProductStructureProvider::awv0IsProductAndConfigSupported#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$bool,*" returnDescription="True if the product and configuration is supported" useCase="">
     <ParameterInfo description="The product and configuration information." parameterName="productAndConfigInfo"/>
     <ParameterInfo description="Whether the provider supports the given product and configuration." parameterName="isSupported"/>
   </Operation>
   <OperationAttach id="awv0GetCompletePSFile#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0GetExportCompliantStructureFiles#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::string,*$std::string,*$std::vector&lt;std::string&gt;,*$std::string,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0GetIndexedProductsAndConfigurations#std::vector&lt;awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo&gt;,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0GetObjectsForLineIdentifiers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$const,std::vector&lt;std::string&gt;,*$std::vector&lt;tag_t&gt;,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0GetProductAndConfigFromRecipe#tag_t$awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0GetPSFileAdminAndAccessControllers#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$tag_t,*$std::vector&lt;tag_t&gt;,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0GetStructureId#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$std::string,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0IsDeltaSupported#bool,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0IsProductAndConfigInRecipeSupported#tag_t$bool,*" typeName="Awv0BOMIndexPSProvider"/>
   <OperationAttach id="awv0IsProductAndConfigSupported#const,awv0activeworkspacevis::Mmv::ProductAndConfigurationInfo,*$bool,*" typeName="Awv0BOMIndexPSProvider"/>
   <TcPropertyAttach typeName="VisStructureContext">
     <TcProperty arrayLength="0" description="This property will return the Indexed Product ID (normally the BIAD UID) if the VisStructureContext object point to a structure that has been indexed, otherwise a null/empty string is returned." isArray="false" propMaxStringLength="128" propName="awv0IndexedProductID" propTypeName="Runtime" propValueType="PROP_string" referencedType="" referencedTypeConstant=""/>
   </TcPropertyAttach>
   <TcOperationAttach description="" extendableElementName="VisStructureContext" extendableElementType="Type" operationName="PROP_ask_value_string" propertyName="awv0IndexedProductID">
     <TcExtensionPoint extensionPointType="PreCondition" isOverridable="false"/>
     <TcExtensionPoint extensionPointType="PreAction" isOverridable="false"/>
     <TcExtensionPoint extensionPointType="PostAction" isOverridable="false"/>
     <TcExtensionPoint extensionPointType="BaseAction" isOverridable="true"/>
   </TcOperationAttach>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Awv0BOMIndexPSProvider" value="Awv0BOMIndexPSProviderCreI"/>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Awv0MMPDeltaCollection" value="Awv0MMPDeltaCollectionCreI"/>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Awv0MMVIndexAdminInfo" value="Awv0MMVIndexAdminInfoCreI"/>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Awv0ProductStructureProvider" value="Awv0ProductStructurePr_alt0CreI"/>
   <TcTypeConstantAttach constantName="DisplayName" typeName="Awv0MMPDeltaCollection" value="$object_name+&quot;-&quot;+$awv0StructureId"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Awv0BOMIndexPSProvider" value="Awv0BOMIndexPSProviderSvAI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Awv0MMPDeltaCollection" value="Awv0MMPDeltaCollectionSvAI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Awv0MMVIndexAdminInfo" value="Awv0MMVIndexAdminInfoSvAI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Awv0ProductStructureProvider" value="Awv0ProductStructurePr_alt0SvAI"/>
   <TcPropertyConstantAttach constantName="Enabled" propertyName="awv0MMVIdxAccessControllers" typeName="Awv0MMVIndexAdminInfo" value="false"/>
   <TcPropertyConstantAttach constantName="Enabled" propertyName="awv0MMVIndexOwningUser" typeName="Awv0MMVIndexAdminInfo" value="false"/>
   <TcPropertyConstantAttach constantName="Enabled" propertyName="awv0ProductAndConfig" typeName="Awv0MMVIndexAdminInfo" value="false"/>
   <TcPropertyConstantAttach constantName="Enabled" propertyName="awv0IndexedProductID" typeName="VisStructureContext" value="false"/>
   <TcPropertyConstantAttach constantName="Modifiable" propertyName="awv0MMVIdxAccessControllers" typeName="Awv0MMVIndexAdminInfo" value="Write"/>
   <TcPropertyConstantAttach constantName="Modifiable" propertyName="awv0MMVIndexOwningUser" typeName="Awv0MMVIndexAdminInfo" value="Write"/>
   <TcPropertyConstantAttach constantName="Modifiable" propertyName="awv0ProductAndConfig" typeName="Awv0MMVIndexAdminInfo" value="Write"/>
   <TcPropertyConstantAttach constantName="Modifiable" propertyName="awv0IndexedProductID" typeName="VisStructureContext" value="Read"/>
   <TcPropertyConstantAttach constantName="Visible" propertyName="awv0StructureId" typeName="Awv0MMPDeltaCollection" value="false"/>
   <TcExtension cannedExtension="false" description="" internal="false" languageType="CPlusPlus" libraryName="libAwv0activeworkspacemmv" name="Awv0AskIndexedProductIDBaseAction">
     <TcExtensionValidity parameter="PROPERTY:VisStructureContext:awv0IndexedProductID:PROP_ask_value_string:4"/>
   </TcExtension>
   <TcExtension cannedExtension="true" description="A post-action on the Awb0BOMIndexAdminData which will create the Awv0MMVIndexAdminInfo when the Awb0BOMIndexAdminData is created." internal="false" languageType="CPlusPlus" libraryName="libAwv0activeworkspacemmv" name="Awv0BOMIndexAdminDataCreateAction">
     <TcExtensionValidity parameter="TYPE:Awb0BOMIndexAdminData:createPost#Teamcenter::CreateInput,*:3"/>
   </TcExtension>
   <TcExtension cannedExtension="false" description="" internal="false" languageType="CPlusPlus" libraryName="libAwv0activeworkspacemmv" name="Awv0BOMIndexAdminDataSetIndexStatePostAction">
     <TcExtensionValidity parameter="PROPERTY:Awb0BOMIndexAdminData:awb0IndexState:PROP_set_value_int:3"/>
   </TcExtension>
   <TcExtension cannedExtension="false" description="" internal="false" languageType="CPlusPlus" libraryName="libAwv0activeworkspacemmv" name="Awv0BOMIndexAdminDataSetSubscribersPostAction">
     <TcExtensionValidity parameter="PROPERTY:Awb0BOMIndexAdminData:awb0Subscribers:PROP_set_value_strings:3"/>
   </TcExtension>
   <TcExtensionAttach conditionName="isTrue" description="" extendableElementName="VisStructureContext" extendableElementType="Type" extensionName="Awv0AskIndexedProductIDBaseAction" extensionPointType="BaseAction" isActive="true" operationName="PROP_ask_value_string" propertyName="awv0IndexedProductID"/>
   <TcExtensionAttach conditionName="isTrue" description="" extendableElementName="Awb0BOMIndexAdminData" extendableElementType="Type" extensionName="Awv0BOMIndexAdminDataCreateAction" extensionPointType="PostAction" isActive="true" operationName="createPost#Teamcenter::CreateInput,*"/>
   <TcExtensionAttach conditionName="isTrue" description="" extendableElementName="Awb0BOMIndexAdminData" extendableElementType="Type" extensionName="Awv0BOMIndexAdminDataSetIndexStatePostAction" extensionPointType="PostAction" isActive="true" operationName="PROP_set_value_int" propertyName="awb0IndexState"/>
   <TcExtensionAttach conditionName="isTrue" description="" extendableElementName="Awb0BOMIndexAdminData" extendableElementType="Type" extensionName="Awv0BOMIndexAdminDataSetSubscribersPostAction" extensionPointType="PostAction" isActive="true" operationName="PROP_set_value_strings" propertyName="awb0Subscribers"/>

   <Condition description="This Condition validates whether Open in vis command should be visible for given selection" expression="u.fnd0ConditionHelper.awp0isObjectTypePresentInPref(&quot;AWC_VIS_OpenSupportedTypes&quot;,o)=true" name="Awv0OpenVVICmdCond" secured="false">
     <ConditionParameter name="o" parameterTypeName="BusinessObject"/>
     <ConditionParameter name="u" parameterTypeName="UserSession"/>
   </Condition>
   <Command commandId="Awv0AllOff" description="UI Command for All Off viewer convenience" displayName="All Off" icon="Awv0AllOff" mnemonic="" requiresUserInput="false" selectionModel="Single" tooltip="All Off"/>
   <Command commandId="Awv0AllOn" description="Command for All On  viewer convenience command" displayName="All On" icon="Awv0AllOn" mnemonic="" requiresUserInput="false" selectionModel="Single" tooltip="All On"/>
   <Command commandId="Awv0ApplyOffset" description="Apply" displayName="Apply" icon="Awv0ApplyOffset" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Apply"/>
   <Command commandId="Awv0ContextOff" description="Context Off" displayName="Context Off" icon="Awv0ContextOff" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Context Off"/>
   <Command commandId="Awv0ContextOn" description="Context On" displayName="Context On" icon="Awv0ContextOn" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Context On"/>
   <Command commandId="Awv0ContextOnly" description="Context Only" displayName="Context Only" icon="Awv0ContextOnly" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Context Only"/>
   <Command commandId="Awv0Fit" description="UI Command for Fit command" displayName="Fit" icon="Awv0Fit" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Fit"/>
   <Command commandId="Awv0GeometricAnalysisMeasure" description="Measure" displayName="Measure" icon="Awv0GeometricAnalysisMeasure" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Measure"/>
   <Command commandId="Awv0GeometricAnalysisProximity" description="Proximity" displayName="Proximity" icon="Awv0GeometricAnalysisProximity" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Proximity"/>
   <Command commandId="Awv0GeometricAnalysisQuery" description="Query" displayName="Query" icon="Awv0GeometricAnalysisQuery" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Query"/>
   <Command commandId="Awv0GeometricAnalysisSection" description="Section" displayName="Section" icon="Awv0GeometricAnalysisSection" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Section"/>
   <Command commandId="Awv0GeometricAnalysisVolume" description="Volume" displayName="Volume" icon="Awv0GeometricAnalysisVolume" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Volume"/>
   <Command commandId="Awv0ImageCapture" description="Image Capture" displayName="Capture" icon="Awv0CaptureCmd" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="Capture"/>
   <Command commandId="Awv0NavigationPan" description="Navigation Pan Command" displayName="Pan" icon="Awv0Pan" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Pan"/>
   <Command commandId="Awv0NavigationRotate" description="Navigation Rotate Command" displayName="Rotate" icon="Awv0Rotate" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Rotate"/>
   <Command commandId="Awv0NavigationZoom" description="Navigation Zoom Command" displayName="Zoom" icon="Awv0Zoom" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Zoom"/>
   <Command commandId="Awv0OrientBack" description="Orient Back command" displayName="Back" icon="Awv0OrientBack" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Back"/>
   <Command commandId="Awv0OrientBottom" description="Orient Bottom Command" displayName="Bottom" icon="Awv0OrientBottom" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Bottom"/>
   <Command commandId="Awv0OrientFront" description="Orient Front Command" displayName="Front" icon="Awv0OrientFront" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Front"/>
   <Command commandId="Awv0OrientIsometric" description="Orient Isometric Command" displayName="Isometric" icon="Awv0OrientIso" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Isometric"/>
   <Command commandId="Awv0OrientLeft" description="Orient Left Command" displayName="Left" icon="Awv0OrientLeft" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Left"/>
   <Command commandId="Awv0OrientRight" description="Orient Right Command" displayName="Right" icon="Awv0OrientRight" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Right"/>
   <Command commandId="Awv0OrientTop" description="Orient Top Command" displayName="Top" icon="Awv0OrientTop" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Top"/>
   <Command commandId="Awv0OrientTrimetric" description="OrientTrimetric Command" displayName="Trimetric" icon="Awv0OrientTri" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Trimetric"/>
   <Command commandId="Awv0PickFeatures" description="Handler class for Pick Features command" displayName="Pick Features" icon="Awv0SelectFeatures" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Pick Features"/>
   <Command commandId="Awv0PickParts" description="Handler class for Pick Parts command" displayName="Pick Parts" icon="Awv0SelectParts" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Pick Parts"/>
   <Command commandId="Awv0Pin" description="Pin" displayName="Pin" icon="Awv0Pin" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Pin"/>
   <Command commandId="Awv0PmiTool" description="PmiTool viewer tool" displayName="PMI" icon="Awv0PMI" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="PMI"/>
   <Command commandId="Awv0QuickMeasure" description="Quick Measure Command handler" displayName="Quick Measure" icon="Awv0MeasureTape" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Quick Measure"/>
   <Command commandId="Awv0RemoveTarget" description="Remove Target Cell Command" displayName="Remove Target" icon="Awv0RemoveTarget" mnemonic="" requiresUserInput="false" selectionModel="Single" tooltip="Remove Target"/>
   <Command commandId="Awv0SelectContext" description="Select Context" displayName="Select Context" icon="Awv0SelectContext" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Select Context"/>
   <Command commandId="Awv0SelectVisible" description="Select Visible Command" displayName="Select Visible" icon="Awv0SelectVisible" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Select Visible"/>
   <Command commandId="Awv0SelectedOff" description="UI Command for Selected Off viewer convenience command" displayName="Selected Off" icon="Awv0SelectedOff" mnemonic="" requiresUserInput="false" selectionModel="Single" tooltip="Selected Off"/>
   <Command commandId="Awv0SelectedOn" description="Selected On" displayName="Selected On" icon="Awv0SelectedOn" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Selected On"/>
   <Command commandId="Awv0SelectedOnly" description="Command for Selected Only viewer convenience command" displayName="Selected Only" icon="Awv0SelectedOnly" mnemonic="" requiresUserInput="false" selectionModel="Single" tooltip="Selected Only"/>
   <Command commandId="Awv0Unpin" description="Unpin" displayName="Unpin" icon="Awv0Unpin" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Unpin"/>
   <Command commandId="Awv0UseTransparencyOff" description="Disable Transparent Selection Display Mode" displayName="Disable Transparent Selection Display Mode" icon="Awv0UseTransparencyOnIcon" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Disable Transparent Selection Display Mode"/>
   <Command commandId="Awv0UseTransparencyOn" description="Enable Transparent Selection Display Mode" displayName="Enable Transparent Selection Display Mode" icon="Awv0UseTransparencyOnIcon" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Enable Transparent Selection Display Mode"/>
   <Command commandId="Awv0ViewerSettings" description="Viewer Settings" displayName="Display" icon="Awv0DisplayOption" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="Display"/>
   <CommandCollection commandCollectionId="Awv0GeometricAnalysisCommands" description="Geometric analysis commands" displayName="Geometric Analysis" mnemonic="" renderingHint="aw_commandGroup"/>
   <CommandCollection commandCollectionId="Awv0PickGroup" description="group for Pick Commands" displayName="PickGroup" mnemonic="" renderingHint=""/>
   <CommandCollection commandCollectionId="Awv0ViewNavigationGroup" description="View navigation command group" displayName="ViewNavigationGroup" mnemonic="" renderingHint=""/>
   <CommandCollection commandCollectionId="Awv0ViewOrientationGroup" description="View orientation command group" displayName="ViewOrientationGroup" mnemonic="" renderingHint=""/>
   <CommandCollection commandCollectionId="Awv0ViewerConvenienceCommandGroup" description="Command Collection for Viewer Convenience Command Group" displayName="Viewer Convenience Command Group" mnemonic="" renderingHint=""/>
   <CommandAttach anchorId="Awv0Unpin" childCommandId="Awv0ApplyOffset" commandCollectionId="Awp0GlobalCommands_cell" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awb0EditEffectivity" childCommandId="Awv0Pin" commandCollectionId="Awp0GlobalCommands_cell" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ApplyOffset" childCommandId="Awv0RemoveTarget" commandCollectionId="Awp0GlobalCommands_cell" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0Pin" childCommandId="Awv0Unpin" commandCollectionId="Awp0GlobalCommands_cell" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ViewerConvenienceCommandGroup" childCommandId="Awv0PickGroup" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awv0PickGroup" childCommandId="Awv0QuickMeasure" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0UseTransparencyOn" childCommandId="Awv0UseTransparencyOff" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0QuickMeasure" childCommandId="Awv0UseTransparencyOn" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ViewNavigationGroup" childCommandId="Awv0ViewerConvenienceCommandGroup" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awv0ViewOrientationGroup" childCommandId="Awv0ViewNavigationGroup" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awp0ClaimTask" childCommandId="Awv0ViewOrientationGroup" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awp0GoHome" childCommandId="Awv0ViewerConvenienceCommandGroup" commandCollectionId="Awp0GlobalStableCommands_footer" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awv0ImageCapture" childCommandId="Awp0Markup" commandCollectionId="Awp0GlobalStableCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ViewerSettings" childCommandId="Awv0GeometricAnalysisCommands" commandCollectionId="Awp0GlobalStableCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awv0PmiTool" childCommandId="Awv0ImageCapture" commandCollectionId="Awp0GlobalStableCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0GeometricAnalysisCommands" childCommandId="Awv0PmiTool" commandCollectionId="Awp0GlobalStableCommands_toolsAndInfo" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awp0ObjectInfo" childCommandId="Awv0ViewerSettings" commandCollectionId="Awp0GlobalStableCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="" childCommandId="Awv0GeometricAnalysisMeasure" commandCollectionId="Awv0GeometricAnalysisCommands" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0GeometricAnalysisVolume" childCommandId="Awv0GeometricAnalysisProximity" commandCollectionId="Awv0GeometricAnalysisCommands" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0GeometricAnalysisMeasure" childCommandId="Awv0GeometricAnalysisQuery" commandCollectionId="Awv0GeometricAnalysisCommands" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0GeometricAnalysisQuery" childCommandId="Awv0GeometricAnalysisSection" commandCollectionId="Awv0GeometricAnalysisCommands" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0GeometricAnalysisSection" childCommandId="Awv0GeometricAnalysisVolume" commandCollectionId="Awv0GeometricAnalysisCommands" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0PickParts" childCommandId="Awv0PickFeatures" commandCollectionId="Awv0PickGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="" childCommandId="Awv0PickParts" commandCollectionId="Awv0PickGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0AllOn" childCommandId="Awv0AllOff" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0Fit" childCommandId="Awv0AllOn" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ContextOn" childCommandId="Awv0ContextOff" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0SelectedOnly" childCommandId="Awv0ContextOn" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ContextOff" childCommandId="Awv0ContextOnly" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="" childCommandId="Awv0Fit" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0ContextOnly" childCommandId="Awv0SelectContext" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0SelectedOn" childCommandId="Awv0SelectedOff" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0AllOff" childCommandId="Awv0SelectedOn" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0SelectedOff" childCommandId="Awv0SelectedOnly" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0SelectContext" childCommandId="Awv0SelectVisible" commandCollectionId="Awv0ViewerConvenienceCommandGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0NavigationRotate" childCommandId="Awv0NavigationPan" commandCollectionId="Awv0ViewNavigationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="" childCommandId="Awv0NavigationRotate" commandCollectionId="Awv0ViewNavigationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0NavigationPan" childCommandId="Awv0NavigationZoom" commandCollectionId="Awv0ViewNavigationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientRight" childCommandId="Awv0OrientBack" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientBack" childCommandId="Awv0OrientBottom" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientTop" childCommandId="Awv0OrientFront" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientTrimetric" childCommandId="Awv0OrientIsometric" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientBottom" childCommandId="Awv0OrientLeft" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientFront" childCommandId="Awv0OrientRight" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awv0OrientIsometric" childCommandId="Awv0OrientTop" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="" childCommandId="Awv0OrientTrimetric" commandCollectionId="Awv0ViewOrientationGroup" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <Icon description="Command Icon for All Off viewer command" name="Awv0AllOff"/>
   <Icon description="Command Icon for All On viewer command" name="Awv0AllOn"/>
   <Icon description="Apply Offset Icon" name="Awv0ApplyOffset"/>
   <Icon description="Capture command" name="Awv0CaptureCmd"/>
   <Icon description="Context Off Icon" name="Awv0ContextOff"/>
   <Icon description="Context on command icon" name="Awv0ContextOn"/>
   <Icon description="Context Only Icon" name="Awv0ContextOnly"/>
   <Icon description="Display option" name="Awv0DisplayOption"/>
   <Icon description="Fit" name="Awv0Fit"/>
   <Icon description="Geometric analysis measure command Icon" name="Awv0GeometricAnalysisMeasure"/>
   <Icon description="Geometric analysis proximity command icon" name="Awv0GeometricAnalysisProximity"/>
   <Icon description="Geometric analysis query command icon" name="Awv0GeometricAnalysisQuery"/>
   <Icon description="Geometric analysis section command icon" name="Awv0GeometricAnalysisSection"/>
   <Icon description="Geometric analysis volume command icon" name="Awv0GeometricAnalysisVolume"/>
   <Icon description="Icon for Quick Measure Command" name="Awv0MeasureTape"/>
   <Icon description="Orient Back" name="Awv0OrientBack"/>
   <Icon description="Orient Bottom" name="Awv0OrientBottom"/>
   <Icon description="Orient Front" name="Awv0OrientFront"/>
   <Icon description="Orient Isometric" name="Awv0OrientIso"/>
   <Icon description="Orient Left" name="Awv0OrientLeft"/>
   <Icon description="Orient Right" name="Awv0OrientRight"/>
   <Icon description="Orient Top" name="Awv0OrientTop"/>
   <Icon description="Orient Trimetric" name="Awv0OrientTri"/>
   <Icon description="PMI" name="Awv0PMI"/>
   <Icon description="Pan" name="Awv0Pan"/>
   <Icon description="Pin Icon" name="Awv0Pin"/>
   <Icon description="Remove Target Command" name="Awv0RemoveTarget"/>
   <Icon description="Rotate" name="Awv0Rotate"/>
   <Icon description="Select Context Icon" name="Awv0SelectContext"/>
   <Icon description="Command Icon for Select Features Command" name="Awv0SelectFeatures"/>
   <Icon description="Command Icon for Select Parts Command" name="Awv0SelectParts"/>
   <Icon description="Select Visible Icon" name="Awv0SelectVisible"/>
   <Icon description="Command Icon for Selected Off viewer command" name="Awv0SelectedOff"/>
   <Icon description="Selected On command icon" name="Awv0SelectedOn"/>
   <Icon description="Command Icon for Selected Only viewer command" name="Awv0SelectedOnly"/>
   <Icon description="Unpin" name="Awv0Unpin"/>
   <Icon description="UseTransparency On Icon" name="Awv0UseTransparencyOnIcon"/>
   <Icon description="Zoom" name="Awv0Zoom"/>
   <CommandConditionAttach commandCollectionId="" commandId="Awp0OpenVVI" conditionName="Awv0OpenVVICmdCond"/>
</Add>
    <Change/>
    <Delete/>
</TcBusinessData>
